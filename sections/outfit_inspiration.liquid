  <div class="outfit-inspiration-section color-{{ section.settings.color_scheme }} page-width p-8 md:py-16 px-0">
    <div class="mx-auto  p-8 md:p-0 relative bg-color:var(--background)">
    

    <!-- Navigation Arrows -->
        <button
          class="outfit-navigation flex lg:flex absolute left-0 top-1/2 -translate-y-1/2 z-10 bg-color:var(--background) border-2 border-color:var(--border))  items-center justify-center transition-opacity duration-300"
          id="outfit-slider-prev"
          aria-label="Previous"
          type="button"
          style="display: flex;"
        >
          <svg class="w-[22px] h-[22px]" fill="none" stroke="black" stroke-width="1" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7"/>
          </svg>
        </button>
        <button
          class=" outfit-navigation flex lg:flex absolute right-0 top-1/2 -translate-y-1/2 z-10 bg-color:var(--background) border-2 border-color:var(--border)) items-center justify-center transition-opacity duration-300"
          id="outfit-slider-next"
          aria-label="Next"
          type="button"
          style="display: flex;"
        >
          <svg class="w-[22px] h-[22px]" fill="none" stroke="black" stroke-width="1" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7"/>
          </svg>
        </button>
      <div class="flex flex-row color-{{ section.settings.color_scheme }} lg:flex-row gap-8 items-start justify-center relative">
      <div class="outfit-contianer flex flex-col">
        <h2
        class="outfit-section-title mb-6"
        style="text-align: {{ section.settings.title_align | default: 'center' }};"
      >
        {{ section.settings.title }}
      </h2>

        <div class="outfit-wrapper flex gap-6 ">
          <!-- Main Product -->
          <div class="  max-w-[409px] mx-10 lg:mx-0 flex flex-col items-center">
            <div
              class=" main-product-card border-2"
              style="border-color: var(--border); box-shadow: 0 1px 2px 0 rgb(16 24 40 / 5%);"
            >
              <div
                class="outfit-main-img rounded-lg flex items-center justify-center w-full"
                style="height: 512px; width: 400px; padding: 10px 0;"
              >
                <img
                  src="{{ product.featured_image | img_url: '409x512' }}"
                  alt="{{ product.title }}"
                  class="object-contain rounded-lg"
                  height="212"
                  width="370"
                >
              </div>
              <div class="px-6">
                <h4 class="text-base md:text-lg text-color: var(--header_text) mb-1">
                  {{ product.title }}
                </h4>
                {% render 'price', product: product %}
              </div>
            </div>
          </div>
          <!-- Paired Products Slider -->
          <div class="relative overflow-hidden" style="width: 390px; min-width: 390px; height: 580px;">
          <div class="flex flex-col justify-center overflow-hidden">
            <div class="transition-transform duration-300 ease-in-out w-full" id="outfit-slider-track">
              {% for block in section.blocks %}
                {% assign product_count = 0 %}
                {% for i in (1..3) %}
                  {% assign product_key = 'product_' | append: i %}
                  {% if block.settings[product_key] != blank %}
                    {% assign product_count = product_count | plus: 1 %}
                  {% endif %}
                {% endfor %}

                <div
                  class="paired-product-slide flex flex-col {% if product_count < 3 %}justify-center{% else %}justify-start{% endif %} gap-4 h-full"
                  data-slide-index="{{ forloop.index0 }}"
                  data-products="{{ product_count }}"
                >
                  {% for i in (1..3) %}
                    {% assign product_key = 'product_' | append: i %}
                    {% if block.settings[product_key] != blank %}
                      {% assign paired_product = all_products[block.settings[product_key]] %}

                      <!-- Original Compact Product Card-->
                      <div
                        class="paired-product-card flex items-center bg-white border-2 rounded-lg p-6 gap-4 transition-all duration-500 ease-in-out relative"
                        style="height: 180px; border-color: var(--border);"
                        data-product-id="{{ paired_product.id }}"
                      >
                        <div class=" paired-product-img w-[140px] h-[150px] rounded-lg flex items-center justify-center overflow-hidden flex-shrink-0">
                          {% if paired_product.featured_image %}
                            <img
                              src="{{ paired_product.featured_image | img_url: '140x150' }}"
                              alt="{{ paired_product.title }}"
                              class="object-contain"
                              height="150"
                              width="140"
                            >
                          {% else %}
                            <div class="w-full h-full bg-gray-300 rounded-lg"></div>
                          {% endif %}
                        </div>
                        <div class="flex-1 min-w-0 flex flex-col justify-between h-full">
                          <div>
                            <h4 class="text-xs md:text-base leading-tight text-black mb-1">
                              {{ paired_product.title }}
                            </h4>
                            {% render 'price', product: paired_product %}
                          </div>
                          <div class="flex items-center justify-between gap-2 mt-auto">
                            <div>
                              {% if paired_product.available == false %}
                                <span class="bg-gray-200 text-gray-700 text-xs rounded-lg p-0"> SOLD OUT </span>
                              {% endif %}
                            </div>
                            <button
                              class="expand-product-btn flex-shrink-0 p-0 transition-transform duration-300 hover:scale-110"
                              aria-label="View Product"
                              data-product-id="{{ paired_product.id }}"
                            >
                              <svg
                                stroke-linecap="round"
                                width="30"
                                height="30"
                                viewBox="0 0 9 9"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path d="M1.1875 7.7334H7.6599M7.6599 7.7334V1.261M7.6599 7.7334L1.1875 1.261" stroke="black" stroke-width="1.5" stroke-linejoin="round"></path>
                              </svg>
                            </button>
                          </div>
                        </div>
                      </div>

                      <!-- Expanded Product Card -->
                      <div
                        class="expanded-product-card bg-white border-2 rounded-lg transition-all duration-500 ease-in-out overflow-hidden opacity-0 pointer-events-none"
                        style="height: 0; margin-top: -8px; border-color: var(--border);"
                        data-product-id="{{ paired_product.id }}"
                      >
                        <div class="expanded-content p-6 h-full">
                          <!-- Product Image Section-->
                          <div class="gap-4">
                            <div class="h-1/2">
                              <div class=" flex items-center justify-center overflow-hidden mb-4">
                                {% if paired_product.featured_image %}
                                  <img
                                    src="{{ paired_product.featured_image | img_url: '200x250' }}"
                                    alt="{{ paired_product.title }}"
                                    height="200"
                                    width="250"
                                    class="exapnded-product-img object-cover"
                                  >
                                {% else %}
                                  <div class=" bg-gray-300 rounded-lg"></div>
                                {% endif %}
                              </div>
                            </div>

                            <!-- Product Details Section  -->
                            <div class="flex-1 flex flex-col">
                              <div class="flex justify-between items-center">
                                <h4 class="text-lg  text-black ">
                                  {{ paired_product.title }}
                                </h4>
                                <button
                                  class="outfit-arrow close-expanded-btn transition-transform duration-300 hover:scale-110 ml-4"
                                  aria-label="Close"
                                  data-product-id="{{ paired_product.id }}"
                                >
                                  <svg
                                    stroke-linecap="round"
                                    width="30"
                                    height="30"
                                    viewBox="0 0 9 9"
                                    fill="none"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path d="M1.1875 7.7334H7.6599M7.6599 7.7334V1.261M7.6599 7.7334L1.1875 1.261" stroke="black" stroke-width="1.5" stroke-linejoin="round"></path>
                                  </svg>
                                </button>
                              </div>

                              <!-- Price -->
                              <div class="mb-4">
                                {% render 'price', product: paired_product %}
                              </div>

                              <!-- Size Options and Color Options  -->
                              <div class="flex justify-between items-center mb-6">
                                <!-- Size Options -->
                                {% assign size_option = null %}
                                {% for option in paired_product.options_with_values %}
                                  {% if option.name == 'Size' or option.name == 'size' %}
                                    {% assign size_option = option %}
                                  {% endif %}
                                {% endfor %}
                                {% if size_option %}
                                  <div class="flex gap-2">
                                    {% for value in size_option.values %}
                                      {% assign variant_for_size = null %}
                                      {% for variant in paired_product.variants %}
                                        {% if variant.options contains value %}
                                          {% assign variant_for_size = variant %}
                                          {% break %}
                                        {% endif %}
                                      {% endfor %}
                                      <button
                                        class="outfit-size-option border-2 border-black rounded-lg flex items-center justify-center transition-colors duration-300 {% if variant_for_size.available %}bg-white hover:bg-black hover:text-white{% else %}bg-gray-200 text-gray-400 cursor-not-allowed{% endif %}{% if forloop.first %} selected{% endif %}"
                                        {% unless variant_for_size.available %}
                                          disabled
                                        {% endunless %}
                                        data-variant-id="{{ variant_for_size.id }}"
                                        data-product-id="{{ paired_product.id }}"
                                        data-option-value="{{ value | escape }}"
                                        type="button"
                                      >
                                        {{ value }}
                                      </button>
                                    {% endfor %}
                                  </div>
                                {% else %}
                                  <div></div>
                                {% endif %}

                                <!-- Color Options -->
                                {% assign color_option = null %}
                                {% for option in paired_product.options_with_values %}
                                  {% if option.name == 'Color'
                                    or option.name == 'Colour'
                                    or option.name == 'color'
                                    or option.name == 'colour'
                                  %}
                                    {% assign color_option = option %}
                                  {% endif %}
                                {% endfor %}
                                {% if color_option %}
                                  <div class="flex gap-2">
                                    {% for value in color_option.values %}
                                      {% assign variant_for_color = null %}
                                      {% for variant in paired_product.variants %}
                                        {% if variant.options contains value %}
                                          {% assign variant_for_color = variant %}
                                          {% break %}
                                        {% endif %}
                                      {% endfor %}
                                      <button
                                        class="color-swatch w-8 h-8 rounded-full border-2 border-black {% if forloop.first %}selected{% endif %}"
                                        title="{{ value }}"
                                        style="background-color:{{ variant_for_color.metafields.custom.color | default: value | downcase }};"
                                        data-variant-id="{{ variant_for_color.id }}"
                                        data-product-id="{{ paired_product.id }}"
                                        data-option-value="{{ value | escape }}"
                                        type="button"
                                      ></button>
                                    {% endfor %}
                                  </div>
                                {% else %}
                                  <div></div>
                                {% endif %}
                              </div>

                              <!-- Add to Cart Button -->
                              <div class="mt-auto">
                                <form method="post" action="/cart/add" class="w-full">
                                  <input type="hidden" name="id" value="{{ paired_product.first_available_variant.id }}">
                                  <input type="hidden" name="quantity" value="1">
                                  <button
                                    type="submit"
                                    class="add-to-cart-btn border-2 border-color: var(--border) w-full py-4 px-6 rounded-lg mb-3 relative {% unless paired_product.available %}sold-out-btn{% endunless %}"
                                    {% unless paired_product.available %}
                                      disabled
                                    {% endunless %}
                                    data-product-id="{{ paired_product.id }}"
                                  >
                                    <span class="btn-text">
                                      {% if paired_product.available %}ADD TO CART{% else %}SOLD OUT{% endif %}
                                    </span>
                                    <span class="notify-in-stock absolute left-0 top-0 w-full h-full flex items-center justify-center font-semibold text-white bg-black bg-opacity-90 transition-opacity duration-200 pointer-events-none opacity-0">
                                      NOTIFY ME WHEN IN STOCK
                                    </span>
                                    <span class="loading-spinner hidden">
                                      <svg
                                        class="animate-spin h-5 w-5"
                                        xmlns="http://www.w3.org/2000/svg"
                                        fill="none"
                                        viewBox="0 0 24 24"
                                      >
                                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                      </svg>
                                    </span>
                                  </button>
                                </form>
                                {% if section.settings.show_full_details_link %}
                                  <a
                                    href="{{ paired_product.url }}"
                                    class="block text-center text-[14px] mt-2"
                                  >
                                    {{ section.settings.redirect_link }}
                                  </a>
                                {% endif %}
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    {% endif %}
                  {% endfor %}
                </div>
              {% endfor %}
            </div>
          </div>
          </div>
        </div>
      </div>
      </div>
    </div>
  </div>

  <style>
    .exapnded-product-img {
      height: 316px !important;
      width: 360px !important;
      border-radius: 16px !important;
    }
    .outfit-navigation {
      border-radius: 28px !important;
      width: 78px !important;
      height: 75px !important;
      cursor: pointer;
    }
    .outfit-arrow {
      transform: rotateX(180deg);
    }
    .outfit-size-option.selected {
      background: #000 !important;
      color: #fff !important;
      border: none !important;
    }
    .outfit-size-option {
      transition: background 0.2s, color 0.2s;
      height: 50px !important;
      width: 50px !important;
      border-radius: 15px !important;
    }
    .main-product-card {
      border-radius: 28px !important;
    }
    .paired-product-card {
      border-radius: 26px !important;
    }
    .paired-product-img {
      width: 140px !important;
      height: 140px !important;
      border-radius: 12px !important;
    }
    .line-clamp-2 {
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    .paired-product-card.hidden-for-expand {
      display: none !important;
    }

    .expanded-product-card {
      border-radius: 28px !important;
      position: absolute;
      left: 0;
      right: 0;
      margin-left: auto;
      margin-right: auto;
      transform-origin: top center;
      transform: scaleY(0);
      opacity: 0;
      pointer-events: none;
      overflow: hidden;
      transition: transform 0.45s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.35s cubic-bezier(0.4, 0, 0.2, 1);
      width: 100%;
      max-width: 440px;
      height: 555px !important;
      z-index: 2;
    }

    .expanded-product-card.active {
      opacity: 1 !important;
      pointer-events: auto;
      transform: scaleY(1);
      margin: 0 !important;
      top: 0;
      left: 0;
      right: 0;
    }
    .outfit-main-img {
      height: 512px !important;
      width: 400px !important;
      padding: 10px !important;
      border-radius: 28px !important;
    }
    @media (max-width: 767px) {
      .outfit-inspiration-section {
        padding: 10px 0 !important;
      }
      .max-w-5xl {
        max-width: 100vw !important;
        padding: 0 !important;
      }
      .flex-row.lg\:flex-row {
        flex-direction: row !important;
        align-items: center !important;
        gap: 12px !important;
      }
      .main-product-card {
        width: 184px !important;
        min-width: 0 !important;
        border-radius: 16px !important;
      }
      .outfit-main-img {
        height: 216px !important;
        width: 172px !important;
        padding: 0 !important;
      }
      .max-w-\[409px\] {
        max-width: 172px !important;
        margin-left: 0 !important;
        margin-right: 0 !important;
      }
      .paired-product-card,
      .expanded-product-card {
        max-width: 172px !important;
        border-radius: 12px !important;
      }
      .paired-product-card {
        height: 75px !important;
        width: 165px !important;
        padding: 8px !important;
        gap: 6px !important;
      }
      .paired-product-img {
        width: 60px !important;
        height: 60px !important;
        border-radius: 8px !important;
      }
      .expanded-product-card {
        max-width: 172px !important;
        height: 250px !important;
        left: 0;
        right: 0;
        margin-left: auto;
        margin-right: auto;
        transform-origin: top center;
        transform: scaleY(0);
        opacity: 0;
        pointer-events: none;
        overflow: hidden;
        transition: transform 0.45s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.35s cubic-bezier(0.4, 0, 0.2, 1);
      }
      .expanded-product-card.active {
        height: 300px !important;
        opacity: 1 !important;
        pointer-events: auto;
        transform: scaleY(1);
        margin: 0 !important;
        top: 0;
        left: 0;
        right: 0;
      }
      .outfit-size-option {
        width: 28px !important;
        height: 28px !important;
        border-radius: 7px !important;
        font-size: 11px !important;
      }
      .w-\[140px\],
      .h-\[150px\] {
        width: 60px !important;
        height: 60px !important;
      }
      .w-\[200px\] {
        width: 80px !important;
      }
      .h-\[250px\] {
        height: 90px !important;
      }
      .p-6 {
        padding: 8px !important;
      }
      .gap-6 {
        gap: 8px !important;
      }
      .mb-4 {
        margin-bottom: 6px !important;
      }
      .rounded-lg {
        border-radius: 8px !important;
      }
      .outfit-navigation {
        position: static !important;
        margin: 0 8px 0 0 !important;
        display: flex !important;
        width: 44px !important;
        height: 44px !important;
        border-radius: 12px !important;
        justify-content: center !important;
        align-items: center !important;
      }
      .outfit-navigation#outfit-slider-prev,
      .outfit-navigation#outfit-slider-next {
        position: static !important;
        left: auto !important;
        right: auto !important;
        top: auto !important;
        transform: none !important;
        margin: 0 6px !important;
        z-index: 10;
        display: none !important;
      }
      .relative.overflow-hidden[style] {
        width: 172px !important;
        min-width: 0 !important;
        height: 250px !important;
      }
      .outfit-inspiration-section .outfit-arrows-mobile {
        display: flex !important;
        justify-content: center;
        gap: 6px;
        margin-top: 10px;
      }
      .outfit-arrows-mobile {
        position: absolute;
        left: 50%;
        bottom: 8px;
        transform: translateX(-50%);
        z-index: 20;
        width: auto;
        background: transparent;
      }
      .outfit-arrows-mobile button {
        margin: 0 2px !important;
      }
    }
    .sold-out-btn:hover .btn-text {
      opacity: 0;
      transition: opacity 0.15s;
    }
    .sold-out-btn:hover .notify-in-stock {
      opacity: 1;
      pointer-events: auto;
      transition: opacity 0.2s;
    }
    .sold-out-btn .notify-in-stock {
      cursor: pointer;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const track = document.getElementById('outfit-slider-track');
      const prev = document.getElementById('outfit-slider-prev');
      const next = document.getElementById('outfit-slider-next');
      const slides = track ? Array.from(track.getElementsByClassName('paired-product-slide')) : [];
      let currentSlide = 0;
      let expandedProductId = null;

      function showSlide(index) {
        slides.forEach((slide, idx) => {
          if (idx === index) {
            slide.style.display = 'flex';
            slide.style.opacity = '1';
          } else {
            slide.style.display = 'none';
            slide.style.opacity = '0';
          }
        });
      }

      function updateArrows() {
        if (prev && next) {
          if (slides.length <= 1 || expandedProductId) {
            prev.style.opacity = '0.3';
            next.style.opacity = '0.3';
            prev.style.pointerEvents = 'none';
            next.style.pointerEvents = 'none';
          } else {
            prev.style.pointerEvents = 'auto';
            next.style.pointerEvents = 'auto';
            prev.style.opacity = currentSlide === 0 ? '0.3' : '1';
            next.style.opacity = currentSlide >= slides.length - 1 ? '0.3' : '1';
          }
        }
      }

      function updateSlider() {
        showSlide(currentSlide);
        updateArrows();
      }

      function expandProduct(productId) {
        const currentSlideElement = slides[currentSlide];
        const compactCard = currentSlideElement.querySelector(`[data-product-id="${productId}"].paired-product-card`);
        const expandedCard = currentSlideElement.querySelector(`[data-product-id="${productId}"].expanded-product-card`);

        if (compactCard && expandedCard) {
          currentSlideElement.querySelectorAll('.paired-product-card').forEach((card) => {
            card.classList.add('hidden-for-expand');
          });
          expandedCard.classList.add('active');

          expandedProductId = productId;
          updateArrows();
        }
      }

      function collapseProduct(productId) {
        const currentSlideElement = slides[currentSlide];
        const expandedCard = currentSlideElement.querySelector(`[data-product-id="${productId}"].expanded-product-card`);

        if (expandedCard) {
          expandedCard.classList.remove('active');

          currentSlideElement.querySelectorAll('.paired-product-card').forEach((card) => {
            card.classList.remove('hidden-for-expand');
          });

          expandedProductId = null;
          updateArrows();
        }
      }

      if (slides.length > 0) {
        showSlide(0);
        updateArrows();

        // Handle expand button clicks
        document.addEventListener('click', function (e) {
          if (e.target.closest('.expand-product-btn')) {
            e.preventDefault();
            const btn = e.target.closest('.expand-product-btn');
            const productId = btn.getAttribute('data-product-id');
            expandProduct(productId);
          }

          if (e.target.closest('.close-expanded-btn')) {
            e.preventDefault();
            const btn = e.target.closest('.close-expanded-btn');
            const productId = btn.getAttribute('data-product-id');
            collapseProduct(productId);
          }
        });

        // Handle slider navigation
        prev?.addEventListener('click', (e) => {
          e.preventDefault();
          if (currentSlide > 0 && !expandedProductId) {
            currentSlide--;
            updateSlider();
          }
        });

        next?.addEventListener('click', (e) => {
          e.preventDefault();
          if (currentSlide < slides.length - 1 && !expandedProductId) {
            currentSlide++;
            updateSlider();
          }
        });
      } else {
        if (prev) prev.style.display = 'none';
        if (next) next.style.display = 'none';
      }

      console.log('Total slides found:', slides.length);
    });

    // Unified event handler for size and color selection
    document.addEventListener('click', function (e) {
      // Size selection 
      if (e.target.classList.contains('outfit-size-option') && !e.target.disabled) {
        const selectedBtn = e.target;
        const expandedCard = selectedBtn.closest('.expanded-product-card');

        if (expandedCard) {
          // Remove selected class from ALL size options in this expanded card
          expandedCard.querySelectorAll('.outfit-size-option').forEach((option) => {
            option.classList.remove('selected');
          });

          // Add selected class to the clicked option
          selectedBtn.classList.add('selected');

          // Update the form's hidden input with the selected variant ID
          const form = expandedCard.querySelector('form');
          if (form) {
            const variantId = selectedBtn.getAttribute('data-variant-id');
            form.querySelector('input[name="id"]').value = variantId;
          }
        }
      }

      // Color selection
      if (e.target.classList.contains('color-swatch') && !e.target.disabled) {
        const selectedSwatch = e.target;
        const expandedCard = selectedSwatch.closest('.expanded-product-card');

        if (expandedCard) {
          // Remove selected class from ALL color swatches in this expanded card
          expandedCard.querySelectorAll('.color-swatch').forEach((swatch) => {
            swatch.classList.remove('selected');
          });

          // Add selected class to the clicked swatch
          selectedSwatch.classList.add('selected');

          // Update the form's hidden input with the selected variant ID
          const form = expandedCard.querySelector('form');
          if (form) {
            const variantId = selectedSwatch.getAttribute('data-variant-id');
            form.querySelector('input[name="id"]').value = variantId;
          }
        }
      }
    });

    // Add to cart functionality
    document.addEventListener('click', function (e) {
      if (!e.target.closest('.add-to-cart-btn')) return;

      e.preventDefault();
      const form = e.target.closest('form');
      const button = form.querySelector('.add-to-cart-btn');
      const btnText = button.querySelector('.btn-text');
      const spinner = button.querySelector('.loading-spinner');

      // Show loading state
      button.disabled = true;
      btnText.classList.add('hidden');
      spinner.classList.remove('hidden');

      fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          items: [
            {
              id: form.querySelector('input[name="id"]').value,
              quantity: parseInt(form.querySelector('input[name="quantity"]').value),
            },
          ],
        }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.status) {
            throw new Error(data.description || 'Error adding product to cart');
          }

          // Success - Update cart drawer/counter here if needed
          btnText.textContent = 'ADDED!';
          setTimeout(() => {
            btnText.textContent = 'ADD TO CART';
          }, 2000);
        })
        .catch((error) => {
          console.error('Error:', error);
          btnText.textContent = 'ERROR - TRY AGAIN';
        })
        .finally(() => {
          button.disabled = false;
          btnText.classList.remove('hidden');
          spinner.classList.add('hidden');
        });
    });
  </script>

  {% schema %}
  {
    "name": "Outfit Inspiration",
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Section Title",
        "default": "Outfit Inspiration"
      },
      {
        "type": "select",
        "id": "title_align",
        "label": "Section Title Alignment",
        "options": [
          { "value": "left", "label": "Left" },
          { "value": "center", "label": "Center" },
          { "value": "right", "label": "Right" }
        ],
        "default": "center"
      },
      {
        "type": "text",
        "id": "redirect_link",
        "label": "Redirect Link",
        "default": "Show Full Details"
      },
      {
        "type": "checkbox",
        "id": "show_full_details_link",
        "label": "Show 'Show full details' link below Add to Cart",
        "default": true
      },
      {
        "type": "color_scheme",
        "id": "color_scheme",
        "label": "t:sections.all.colors.label",
        "default": "scheme-1"
      }
    ],
    "blocks": [
      {
        "type": "product_group",
        "name": "Product Group (Slide)",
        "settings": [
          {
            "type": "product",
            "id": "product_1",
            "label": "Product 1"
          },
          {
            "type": "product",
            "id": "product_2",
            "label": "Product 2"
          },
          {
            "type": "product",
            "id": "product_3",
            "label": "Product 3"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Outfit Inspiration"
      }
    ]
  }
  {% endschema %}
