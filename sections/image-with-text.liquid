{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }
  @media screen and (max-width: 750px){
    .heading-size-large{
       font-size: 40px !important;
    line-height: 4rem !important;
    } 
     .heading-size-medium {
    font-size: 30px !important;
    line-height: 3rem !important;
  }
    .heading-size-small {
    font-size: 20px !important ;
    line-height: 2rem !important;
  }
    .image-with-text-button{
      font-size: 16px !important;
    }
  }
  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .media-section-{{ section.id }} {
    height: {{ section.settings.height_mobile }}px;
  }

  @media screen and (min-width: 750px) {
    .media-section-{{ section.id }} {
      height: {{ section.settings.height }}px;
    }
  }

  .heading-size-small {
    font-size: 50px;
    line-height: 4rem;
    font-weight: 700;
  }

  @media (min-width: 750px) {
    .heading-size-small {
      font-size: 50px;
      line-height: 4rem;
    }
  }

  .heading-size-medium {
    font-size: 60px;
    line-height: 5rem;
    font-weight: 700;
  }

  @media (min-width: 750px) {
    .heading-size-medium {
      font-size: 60px;
      line-height: 5rem;
    }
  }

  .heading-size-large {
    font-size: 70px;
    line-height: 7rem;
    font-weight: 700;
  }

  @media (min-width: 750px) {
    .heading-size-large {
      font-size: 70px;
      line-height: 7rem;
    }
  }

  .text-content-wrapper-{{ section.id }} {
    display: flex;
    width: 100%;
    height: 100%;
    justify-content: {{ section.settings.horizontal_position }};
    align-items: {{ section.settings.vertical_position }};
  }

  .text-content-container-{{ section.id }} {
    width: 100%;
    max-width: calc({{ section.settings.content_width }}% + 2rem);
    padding: {{ section.settings.content_padding }}px;
  }

  @media (max-width: 749px) {
    .text-content-container-{{ section.id }} {
      max-width: calc({{ section.settings.content_width_mobile }}% + 1rem);
      padding: {{ section.settings.content_padding | times: 0.75 | round: 0 }}px;
    }
  }

  .animate-block-from-left {
    animation: slideFromLeft 1s ease-out forwards;
    opacity: 0;
  }

  .animate-block-from-right {
    animation: slideFromRight 1s ease-out forwards;
    opacity: 0;
  }

  .animate-block-from-top {
    animation: slideFromTop 1s ease-out forwards;
    opacity: 0;
  }

  .animate-block-from-bottom {
    animation: slideFromBottom 1s ease-out forwards;
    opacity: 0;
  }

  /* New fade-in animations */
  .fade-in-from-left {
    animation: fadeInFromLeft 1s ease-out forwards;
    opacity: 0;
  }

  .fade-in-from-right {
    animation: fadeInFromRight 1s ease-out forwards;
    opacity: 0;
  }

  @keyframes fadeInFromLeft {
    from { transform: translateX(-50px); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }

  @keyframes fadeInFromRight {
    from { transform: translateX(50px); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }

  @keyframes slideFromLeft {
    from { transform: translateX(-100px); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }

  @keyframes slideFromRight {
    from { transform: translateX(100px); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }

  @keyframes slideFromTop {
    from { transform: translateY(-100px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }

  @keyframes slideFromBottom {
    from { transform: translateY(100px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }
  .text-letter-animation .letter {
    display: inline-block;
    opacity: 0;
  }

  .text-letter-from-left .letter {
    animation: letterFromLeft 0.5s forwards;
    transform: translateX(-20px);
  }

  .text-letter-from-right .letter {
    animation: letterFromRight 0.5s forwards;
    transform: translateX(20px);
  }

  .text-letter-fade-in .letter {
    animation: letterFadeIn 0.5s forwards;
  }

  @keyframes fadeIn {
    to { opacity: 1; }
  }

  @keyframes letterFromLeft {
    to { transform: translateX(0); opacity: 1; }
  }

  @keyframes letterFromRight {
    to { transform: translateX(0); opacity: 1; }
  }

  @keyframes letterFadeIn {
    to { opacity: 1; }
  }
{%- endstyle -%}

<div class="media-section-{{ section.id }} relative w-full overflow-hidden section-{{ section.id }}-padding">
  {% if section.settings.use_video and section.settings.video_url != blank %}
    <div class="absolute inset-0 m-{{ section.settings.media_margin }}">
      {% if section.settings.video_url.type == 'youtube' %}
        <iframe
          class="w-full h-full object-cover"
          src="https://www.youtube.com/embed/{{ section.settings.video_url.id }}?autoplay=1&controls=0&mute=1&loop=1&playlist={{ section.settings.video_url.id }}&playsinline=1&rel=0&enablejsapi=1"
          frameborder="0"
          allow="autoplay; encrypted-media"
          allowfullscreen
        ></iframe>
      {% elsif section.settings.video_url.type == 'vimeo' %}
        <iframe
          class="w-full h-full object-cover"
          src="https://player.vimeo.com/video/{{ section.settings.video_url.id }}?background=1&autoplay=1&loop=1&byline=0&title=0"
          frameborder="0"
          allow="autoplay; encrypted-media"
          allowfullscreen
        ></iframe>
      {% endif %}
    </div>
  {% elsif section.settings.image != blank %}
    <div class="absolute inset-0 m-{{ section.settings.media_margin }}">
      <img
        srcset="
          {% if section.settings.image.width >= 375 %}{{ section.settings.image | image_url: width: 375 }} 375w,{% endif %}
          {% if section.settings.image.width >= 550 %}{{ section.settings.image | image_url: width: 550 }} 550w,{% endif %}
          {% if section.settings.image.width >= 750 %}{{ section.settings.image | image_url: width: 750 }} 750w,{% endif %}
          {% if section.settings.image.width >= 1100 %}{{ section.settings.image | image_url: width: 1100 }} 1100w,{% endif %}
          {% if section.settings.image.width >= 1500 %}{{ section.settings.image | image_url: width: 1500 }} 1500w,{% endif %}
          {% if section.settings.image.width >= 2200 %}{{ section.settings.image | image_url: width: 2200 }} 2200w,{% endif %}
          {{ section.settings.image | image_url }} {{ section.settings.image.width }}w
        "
        sizes="100vw"
        height="auto"
        width="auto"
        src="{{ section.settings.image | image_url: width: 1500 }}"
        alt="{{ section.settings.image.alt | escape }}"
        class="w-full h-full object-cover"
        loading="lazy"
      >
    </div>
  {% else %}
    <div class="absolute inset-0 m-{{ section.settings.media_margin }} bg-gray-200 flex items-center justify-center">
      {{ 'image' | placeholder_svg_tag: 'w-1/2 h-auto opacity-30' }}
    </div>
  {% endif %}

  {% if section.settings.overlay_opacity > 0 %}
    <div
      class="absolute inset-0 bg-black"
      style="opacity: {{ section.settings.overlay_opacity | divided_by: 100.0 }};"
    ></div>
  {% endif %}

  <div class="absolute inset-0 px-12 text-content-wrapper-{{ section.id }}">
    <div class="text-content-container-{{ section.id }} 
      {% if section.settings.animation_type == 'block-from-left' %}animate-block-from-left{% endif %}
      {% if section.settings.animation_type == 'block-from-right' %}animate-block-from-right{% endif %}
      {% if section.settings.animation_type == 'block-from-top' %}animate-block-from-top{% endif %}
      {% if section.settings.animation_type == 'block-from-bottom' %}animate-block-from-bottom{% endif %}
      {% if section.settings.animation_type == 'fade-in-from-left' %}fade-in-from-left{% endif %}
      {% if section.settings.animation_type == 'fade-in-from-right' %}fade-in-from-right{% endif %}
      {% if section.settings.animation_type contains 'text-letter-' %}text-letter-animation {{ section.settings.animation_type }}{% endif %}
      {% if section.settings.text_alignment == 'center' %}text-center{% elsif section.settings.text_alignment == 'right' %}text-right{% else %}text-left{% endif %}"
      data-animation-type="{{ section.settings.animation_type }}">
      
      {% for block in section.blocks %}
        {% case block.type %}
          {% when 'caption' %}
            <p class="caption mb-2 {{ block.settings.caption_style }}" 
               style="color: {{ block.settings.text_color }};">
              {{ block.settings.caption | escape }}
            </p>

          {% when 'heading' %}
            {% assign heading_class = '' %}
            {% if block.settings.heading_size == 'small' %}
              {% assign heading_class = 'heading-size-small' %}
            {% elsif block.settings.heading_size == 'medium' %}
              {% assign heading_class = 'heading-size-medium' %}
            {% elsif block.settings.heading_size == 'large' %}
              {% assign heading_class = 'heading-size-large' %}
            {% endif %}

            <h2 class="heading mb-4 {{ heading_class }}" 
                style="color: {{ block.settings.text_color }};">
              {{ block.settings.heading }}
            </h2>

          {% when 'text' %}
            <div class="text-content mb-6" 
                 style="color: {{ block.settings.text_color }};">
              {{ block.settings.text }}
            </div>

          {% when 'button' %}
            <div class="image-with-text-button-container mt-10 {% if section.settings.text_alignment == 'center' %}text-center{% elsif section.settings.text_alignment == 'right' %}text-right{% else %}text-left{% endif %}">
              <a
                href="{{ block.settings.button_link }}"
                class="relative inline-block bg-white rounded-md px-5 leading-[1]  uppercase tracking-wide overflow-hidden group text-black transition-colors duration-10 z-10"
              >
                <span class="image-with-text-button relative z-10 leading-[1] text-[24px] flex items-center transform transition-all duration-200 fade-in group-hover:-translate-x-full">
                  {{ block.settings.button_label | escape }}
                  {% if block.settings.show_button_arrow %}
                    <span class="button-arrow ml-2">
                      <svg width="28" height="36" viewBox="0 0 38 36" xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 ml-7">
                        <path fill="currentColor" d="M26.79,9.21A35.06,35.06,0,0,0,37,16.2v3.66a35.34,35.34,0,0,0-10.21,7A12.84,12.84,0,0,0,23.21,36H17.56q0-6.22,3-10a15.4,15.4,0,0,1,8.06-5.2V20.6H0V15.43H28.63v-.3A15.16,15.16,0,0,1,20.57,10q-3-3.77-3-10h5.65a13,13,0,0,0,.87,5A12.79,12.79,0,0,0,26.79,9.21Z"></path>
                      </svg>
                    </span>
                  {% endif %}
                </span>
                <span class="image-with-text-button absolute text-[24px] leading-[1]  inset-0 z-10 flex items-center justify-center rounded-md border border-white transform translate-x-full group-hover:translate-x-0 transition-all duration-200 fade-in text-white bg-black">
                  {{ block.settings.button_label | escape }}
                  {% if block.settings.show_button_arrow %}
                    <span class="button-arrow ml-2">
                      <svg width="28" height="36" viewBox="0 0 38 36" xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 ml-7">
                        <path fill="currentColor" d="M26.79,9.21A35.06,35.06,0,0,0,37,16.2v3.66a35.34,35.34,0,0,0-10.21,7A12.84,12.84,0,0,0,23.21,36H17.56q0-6.22,3-10a15.4,15.4,0,0,1,8.06-5.2V20.6H0V15.43H28.63v-.3A15.16,15.16,0,0,1,20.57,10q-3-3.77-3-10h5.65a13,13,0,0,0,.87,5A12.79,12.79,0,0,0,26.79,9.21Z"></path>
                      </svg>
                    </span>
                  {% endif %}
                </span>
              </a>
            </div>
        {% endcase %}
      {% endfor %}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const contentContainer = document.querySelector('.text-content-container-{{ section.id }}');
    const animationType = contentContainer.getAttribute('data-animation-type');

    if (animationType && animationType.includes('text-letter-')) {
      const textElements = contentContainer.querySelectorAll('p, h2');
      
      textElements.forEach(element => {
        const text = element.textContent.trim();
        element.innerHTML = '';

        for (let i = 0; i < text.length; i++) {
          const letterSpan = document.createElement('span');
          letterSpan.classList.add('letter');
          letterSpan.style.animationDelay = (i * 0.03) + 's'; 
          letterSpan.textContent = text.charAt(i) === ' ' ? '\u00A0' : text.charAt(i); 
          element.appendChild(letterSpan);
        }
      });

      const richTextContainers = contentContainer.querySelectorAll('.text-content');
      richTextContainers.forEach(container => {
        const paragraphs = container.querySelectorAll('p');
        paragraphs.forEach(paragraph => {
          const text = paragraph.textContent.trim();
          paragraph.innerHTML = '';

          for (let i = 0; i < text.length; i++) {
            const letterSpan = document.createElement('span');
            letterSpan.classList.add('letter');
            letterSpan.style.animationDelay = (i * 0.03) + 's'; 
            letterSpan.textContent = text.charAt(i) === ' ' ? '\u00A0' : text.charAt(i);
            paragraph.appendChild(letterSpan);
          }
        });
      });
    }
  });
</script>

{% schema %}
{
  "name": "Image with Text",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Media Settings"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "checkbox",
      "id": "use_video",
      "label": "Use video instead of image",
      "default": false
    },
    {
      "type": "video_url",
      "id": "video_url",
      "label": "Video URL",
      "accept": ["youtube", "vimeo"],
      "info": "YouTube or Vimeo URL"
    },
    {
      "type": "range",
      "id": "media_margin",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Media margins",
      "default": 0,
      "info": "Adds margin to all sides of the media"
    },
    {
      "type": "header",
      "content": "Animation Settings"
    },
    {
      "type": "select",
      "id": "animation_type",
      "label": "Animation",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "block-from-left",
          "label": "Entire content from left"
        },
        {
          "value": "block-from-right",
          "label": "Entire content from right"
        },
        {
          "value": "block-from-top",
          "label": "Entire content from top"
        },
        {
          "value": "block-from-bottom",
          "label": "Entire content from bottom"
        },
        {
          "value": "fade-in-from-left",
          "label": "Fade in from left"
        },
        {
          "value": "fade-in-from-right",
          "label": "Fade in from right"
        },
        {
          "value": "text-letter-from-left",
          "label": "Text letter by letter from left"
        },
        {
          "value": "text-letter-from-right",
          "label": "Text letter by letter from right" 
        },
        {
          "value": "text-letter-fade-in",
          "label": "Text letter by letter fade in"
        }
      ],
      "default": "none",
      "info": "Choose how content animates when the section appears"
    },
    {
      "type": "header",
      "content": "Content Positioning"
    },
    {
      "type": "select",
      "id": "horizontal_position",
      "label": "Horizontal position",
      "options": [
        {
          "value": "flex-start",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "flex-end",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "select",
      "id": "vertical_position",
      "label": "Vertical position",
      "options": [
        {
          "value": "flex-start",
          "label": "Top"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "flex-end",
          "label": "Bottom"
        }
      ],
      "default": "center"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "content_width",
      "min": 30,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Content width (desktop)",
      "default": 60
    },
    {
      "type": "range",
      "id": "content_width_mobile",
      "min": 50,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Content width (mobile)",
      "default": 90
    },
    {
      "type": "range",
      "id": "content_padding",
      "min": 0,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Content padding",
      "default": 20
    },
    {
      "type": "header",
      "content": "Section Size"
    },
    {
      "type": "range",
      "id": "height",
      "min": 300,
      "max": 800,
      "step": 50,
      "unit": "px",
      "label": "Section height (desktop)",
      "default": 500
    },
    {
      "type": "range",
      "id": "height_mobile",
      "min": 200,
      "max": 600,
      "step": 50,
      "unit": "px",
      "label": "Section height (mobile)",
      "default": 350
    }
  ],
  "blocks": [
    {
      "type": "caption",
      "name": "Caption",
      "settings": [
        {
          "type": "text",
          "id": "caption",
          "label": "Caption text",
          "default": "Caption"
        },
        {
          "type": "select",
          "id": "caption_style",
          "label": "Caption style",
          "options": [
            {
              "value": "uppercase tracking-widest text-sm",
              "label": "Small with letter spacing"
            },
            {
              "value": "italic text-base",
              "label": "Italic"
            },
            {
              "value": "font-bold text-base",
              "label": "Bold"
            }
          ],
          "default": "uppercase tracking-widest text-sm"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text Color",
          "default": "#FFFFFF"
        }
      ]
    },
    {
      "type": "heading",
      "name": "Heading",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "HEADING"
        },
        {
          "type": "select",
          "id": "heading_size",
          "label": "Heading size",
          "options": [
            {
              "value": "small",
              "label": "Small"
            },
            {
              "value": "medium",
              "label": "Medium"
            },
            {
              "value": "large",
              "label": "Large"
            }
          ],
          "default": "large"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text Color",
          "default": "#FFFFFF"
        }
      ]
    },
    {
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>Add your description or promotional text here to accompany your featured image or video.</p>"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text Color",
          "default": "#FFFFFF"
        }
      ]
    },
    {
      "type": "button",
      "name": "Button",
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "label": "Button label",
          "default": "EXPLORE NOW"
        },
        {
          "type": "checkbox",
          "id": "show_button_arrow",
          "label": "Show arrow in button",
          "default": true
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Image with Text",
      "category": "Media",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "button"
        }
      ],
      "settings": {
        "horizontal_position": "center",
        "vertical_position": "center",
        "text_alignment": "center"
      }
    }
  ]
}
{% endschema %}
