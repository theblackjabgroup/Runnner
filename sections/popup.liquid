<div id="promo-overlay" class="fixed inset-0 bg-black/50 hidden z-[1000] overflow-y-auto">
  <div class="absolute inset-0 flex items-center justify-center p-4">
    <div class="relative w-full max-w-[90vw] md:max-w-[60vw] max-h-[90vh] md:max-h-[500px]">
      <button
        id="promo-close"
        class="absolute top-2 right-2 md:top-4 md:right-4 text-4xl font-bold text-gray-700 hover:text-black z-10"
        aria-label="Close popup"
        onclick="hidePromo()"
      >&times;</button>
      <div class="popup-container bg-white rounded-lg overflow-hidden shadow-xl h-full md:h-[500px]">
        <div class="flex flex-col-reverse md:flex-row w-full h-full">
          <!-- Text Section -->
          <div class="w-full md:w-1/2 flex items-center justify-center p-4 md:p-6 bg-white">
            <div class="w-full max-w-md text-center">
              <h2 class="font-bold mb-2">
                {{ section.settings.header }}
              </h2>
              <p class="text-black-600 mb-2 text-base md:text-2xl">
                {{ section.settings.sub_header }}
              </p>
              <p class="text-sm md:text-lg text-black-200 mb-4 md:mb-6">
                ({{ section.settings.bracket_header }})
              </p>
              <div class="email-holder">
                <input
                  type="email"
                  placeholder="Email address"
                  class="w-full px-4 py-2 my-2 border-[3px] border-black rounded-md focus:outline-none focus:ring-2 focus:ring-black"
                />
              </div>
              <button
                id="get-access"
                class="w-full bg-black text-white py-2 rounded-md hover:bg-black-900 transition duration-200"
                onclick="hidePromo()"
              >
                {{ section.settings.btn }}
              </button>
            </div>
          </div>
          <!-- Image Section -->
          <div class="w-full md:w-1/2 aspect-[4/3] md:aspect-auto">
            {% if section.settings.image != blank %}
              <div class="h-full w-full">
                {{ section.settings.image | image_url: width: 1200 | image_tag:
                  class: 'w-full h-full object-cover',
                  alt: 'Offer Promo',
                  loading: 'lazy' }}
              </div>
            {% else %}
              <div class="w-full h-full bg-black-200 flex items-center justify-center">
                <p class="text-black-500">Please select an image in theme settings</p>
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  // Timer variable to track the reappear timeout
  let reappearTimer;
  
  // Configuration (in milliseconds)
  const REAPPEAR_DELAY = {{ section.settings.reappear_delay | default: 30 }} * 1000; // Time before popup reappears after being closed
  const INITIAL_DELAY = {{ section.settings.initial_delay | default: 1 }} * 1000;  // Time before popup first appears
  
  // Show the popup
  function showPromo() {
    document.getElementById('promo-overlay').classList.remove('hidden');
    console.log('Popup shown');
  }
  
  // Hide the popup and set a timer for it to reappear
  function hidePromo() {
    document.getElementById('promo-overlay').classList.add('hidden');
    console.log('Popup hidden');
    
    // Clear any existing timer
    clearTimeout(reappearTimer);
    
    // Set a new timer for the popup to reappear
    reappearTimer = setTimeout(function() {
      console.log('Reappear timer triggered');
      showPromo();
    }, REAPPEAR_DELAY);
  }
  
  // Fix for theme editor - ensures popup remains enabled
  document.addEventListener('shopify:section:load', function(event) {
    if (event.detail.sectionId.includes('popup')) {
      // Clear any existing timer
      clearTimeout(reappearTimer);
      
      // Show the popup after a brief delay (to ensure the section is fully loaded)
      setTimeout(showPromo, 500);
      
      // Re-attach event listeners
      attachEventListeners();
    }
  });
  
  // Attach event listeners to buttons
  function attachEventListeners() {
    // Handle close button click
    const closeButton = document.getElementById('promo-close');
    if (closeButton) {
      closeButton.addEventListener('click', function() {
        hidePromo();
      });
    }
    
    // Handle "Get Access" button click
    const getAccessButton = document.getElementById('get-access');
    if (getAccessButton) {
      getAccessButton.addEventListener('click', function() {
        hidePromo();
      });
    }
  }
  
  // When the DOM is fully loaded
  document.addEventListener('DOMContentLoaded', function() {
    // Attach event listeners
    attachEventListeners();
    
    // Show the popup after the initial delay
    setTimeout(showPromo, INITIAL_DELAY);
  });
</script>
{% schema %}
{
  "name": "Popup",
  "settings": [
    { 
      "type": "text", 
      "id": "header", 
      "default": "ENJOY 10% OFF YOUR FIRST ORDER + FREE SHIPPING", 
      "label": "Heading for first line" 
    },
    { 
      "type": "text", 
      "id": "sub_header", 
      "default": "And stay updated on new releases, events, stories and more.",
      "label": "Heading for second line" 
    },
    { 
      "type": "text",
      "id": "bracket_header",
      "default": "Your code will be emailed",
      "label": "Heading for mail line"
    },
    {
      "type": "text",
      "id": "btn",
      "default": "GET ACCESS",
      "label": "Heading for access button" 
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image to be displayed"
    },
    {
      "type": "range",
      "id": "initial_delay",
      "min": 0,
      "max": 10,
      "step": 1,
      "default": 1,
      "label": "Initial delay before popup appears (seconds)"
    },
    {
      "type": "range",
      "id": "reappear_delay",
      "min": 5,
      "max": 60,
      "step": 5,
      "default": 30,
      "label": "Time before popup reappears after closing (seconds)"
    }
  ],
  "presets": [
    { "name": "Pop Up", "category": "Promotions" }
  ]
}
{% endschema %}