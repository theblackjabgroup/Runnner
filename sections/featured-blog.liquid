<style>
  .blog-archive-section {
    padding: 2rem;
    background-color: rgb(var(--color-background)) !important;
    color: var(--text) !important;
    /* margin-right: 0; */
  }
  .blog-archive-section ::selection {
    /* background: none; */
    color: var(--cr-yellow-2) !important;
  }
  .blog-archive-section-title {
    font-size: 32px;
    font-weight: 500;
    margin: 0;
    padding: 0;
  }

  .blog-archive-section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 20px 0 40px 0;
  }
  .view-toggle {
    position: relative;
    display: inline-flex;
    border: 1px solid var(--text);
    border-radius: 4px;
    overflow: hidden;
    min-width: 13.5rem;
  }
  .view-toggle .toggle-slider {
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 100%;
    background: var(--text);
    border-radius: 4px;
    transition: left 0.3s ease, width 0.3s ease;
    z-index: 0;
  }
  .view-toggle button {
    position: relative;
    padding: 0rem 0.4rem;
    border: none;
    background: transparent;
    color: var(--text);
    cursor: pointer;
    font-size: 24px;
    z-index: 1;
    transition: color 0.3s ease;
    line-height: 24px;
    text-transform: uppercase;
  }
  .view-toggle button.active {
    color: rgb(var(--color-background));
    background-color: var(--text);
  }

  .blog-archive-grid {
    margin: 0 0 2rem auto;
    transition: opacity 0.3s ease;
    opacity: 1;
    overflow: visible;
  }

  .blog-archive-grid.list-view {
    border-top: 1px solid var(--text);
    border-bottom: 1px solid var(--text);
    width: 80%;
    display: block;
  }

  @media (max-width: 749px) {
    .blog-archive-grid {
      width: 100% !important;
      margin: 0 0 2rem;
    }
  }
  .blog-archive-grid.grid-view {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
  }
  @media (max-width: 990px) {
    .blog-archive-grid.grid-view {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  @media (max-width: 749px) {
    .blog-archive-grid.grid-view {
      grid-template-columns: 1fr;
    }
  }

  .blog-archive-card {
    position: relative;
    display: flex;
    flex-direction: column;
    background: rgb(var(--color-background));
    text-decoration: none;
    overflow: visible;
    transition: background 0.3s ease, color 0.3s ease;
  }
  .blog-archive-card-image-wrapper {
    width: 100%;
    overflow: hidden;
  }
  .blog-archive-card-image {
    display: block;
    width: 100%;
    height: auto;
    object-fit: cover;
    transform-origin: center center;
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  .blog-archive-card:hover .blog-archive-card-image {
    transform: scale(1.08);
  }
  .blog-archive-card-content {
    padding: 1.8rem 1rem;
    display: flex;
    flex-direction: column;
    flex: 1 1 auto;
  }
  .blog-archive-card-date {
    position: relative;
    font-size: 2rem;
    margin: 0 1rem 0 0;
    color: var(--text);
    white-space: nowrap;
    /* z-index: 1001; */
  }
  .blog-archive-card-title {
    font-size: 32px;
    line-height: 1.1;
    margin: 0 0 1rem;
    font-weight: 500;
    color: var(--text);
    letter-spacing: -1px;
    line-height: 85%;
  }
  .blog-archive-card-desc {
    font-size: 2rem;
    margin: 0;
    color: var(--text);
    flex-grow: 1;
  }

  /* List view overrides */
  .blog-archive-grid.list-view .blog-archive-card {
    flex-direction: row;
    align-items: center;
    padding: 1rem 0;
    border-top: 1px solid var(--text);
    border-bottom: 1px solid var(--text);
  }
  .blog-archive-grid.list-view .blog-archive-card:hover {
    background: var(--text);
    color: rgb(var(--color-background));
  }
  .blog-archive-grid.list-view .blog-archive-card:hover .blog-archive-card-title,
  .blog-archive-grid.list-view .blog-archive-card:hover .blog-archive-card-date {
    color: rgb(var(--color-background));
  }

  /* Hide description and image wrapper by default in list view */
  .blog-archive-grid.list-view .blog-archive-card-desc,
  .blog-archive-grid.list-view .blog-archive-card-image-wrapper {
    display: none;
  }

  /* Side-by-side date and title with ellipsis */
  .blog-archive-grid.list-view .blog-archive-card-content {
    flex-direction: row;
    align-items: center;
    padding: 0;
    gap: 1rem;
  }
  .blog-archive-grid.list-view .blog-archive-card-date {
    font-size: 2.5rem;
    margin: 0;
    min-width: 30rem;
  }
  .blog-archive-grid.list-view .blog-archive-card-title {
    font-size: 3rem;
    margin: 0;
    flex: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    line-height: normal;
  }

  /* Preview image on hover in list view */
  .blog-archive-grid.list-view .blog-archive-card:hover .blog-archive-card-image-wrapper {
    display: block;
    position: absolute;
    top: 50%;
    left: -50px;
    width: 300px;
    transform: translate(-50%, -50%);
    z-index: 1000;
    overflow: visible;
  }
  .blog-archive-grid.list-view .blog-archive-card:hover .blog-archive-card-title-arrow {
    filter: invert(1) brightness(2);
  }
  .blog-archive-grid.list-view .blog-archive-card:hover .blog-archive-card-date {
    color: rgb(var(--color-background));
    z-index: 1001;
  }
  .blog-archive-grid.list-view .blog-archive-card:hover .blog-archive-card-image {
    width: 100%;
    height: auto;
  }
  .blog-archive-grid.list-view .blog-archive-card-content,
  .blog-archive-grid.list-view .blog-archive-card-title,
  .blog-archive-grid.list-view .blog-archive-card-date {
    min-width: 0;
  }

  .blog-archive-grid.list-view .blog-archive-card-title {
    /* allow flex-shrink */
    flex-shrink: 1;
    /* permit it to become smaller than its contents */
    min-width: 0;
    /* make sure it spans the remaining space */
    width: 100%;
    display: block;
    /* your existing ellipsis rules */
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  @media (max-width: 600px) {
    .blog-archive-grid.list-view .blog-archive-card-content {
      flex-direction: column;
      padding: 1rem 0;
      gap: 0.5rem;
      align-items: flex-start;
    }

    .blog-archive-grid.list-view .blog-archive-card-title {
      max-width: calc(100vw - 4rem); /* account for any padding/margins */
    }
  }
</style>

{% if section.settings.enabled %}
  <section
    class="blog-archive-section color-{{ section.settings.color_scheme }}"
    aria-labelledby="blog-archive-section-title"
  >
    <header class="blog-archive-section-header">
      <h2 class="blog-archive-section-title" id="blog-archive-section-title">{{ section.settings.heading }}</h2>
      <div class="view-toggle" role="radiogroup" aria-label="Blog view options">
        <div class="toggle-slider"></div>
        <button id="gridViewBtn" class="active" role="radio" aria-checked="true" type="button">Grid</button>
        <button id="listViewBtn" role="radio" aria-checked="false" type="button">List</button>
      </div>
    </header>

    {% if section.settings.description != blank %}
      <div class="sr-only" id="blog-archive-section-desc">
        {{ section.settings.description }}
      </div>
    {% endif %}

    <div
      class="blog-archive-grid grid-view"
      id="archiveContainer"
      aria-live="polite"
      aria-label="Blog articles"
    >
      {% assign blog_handle = section.settings.blog %}
      {% assign post_limit = section.settings.post_limit %}
      {% if blog_handle != blank and blogs[blog_handle].articles.size > 0 %}
        {% for article in blogs[blog_handle].articles limit: post_limit %}
          <article aria-labelledby="article-title-{{ forloop.index0 }}">
            <a
              href="{{ article.url }}"
              class="blog-archive-card"
              aria-describedby="article-date-{{ forloop.index0 }}"
            >
              <div class="blog-archive-card-image-wrapper">
                {% if article.image %}
                  <img
                    class="blog-archive-card-image"
                    src="{{ article.image | image_url }}"
                    alt="{{ article.title }}"
                    width="auto"
                    height="auto"
                    loading="lazy"
                  >
                {% else %}
                  <div style="width:100%; background:#f3f3f3; display:flex; align-items:center; justify-content:center; padding:4rem 0;">
                    <span style="color:#bbb;" aria-hidden="true">No image</span>
                  </div>
                {% endif %}
              </div>
              <div class="blog-archive-card-content">
                <time
                  class="blog-archive-card-date"
                  id="article-date-{{ forloop.index0 }}"
                  datetime="{{ article.published_at | date: '%Y-%m-%d' }}"
                >
                  {{ article.published_at | date: '%B %d, %Y' }}
                </time>
                <h3 class="blog-archive-card-title" id="article-title-{{ forloop.index0 }}">
                  <img
                    src="{{ "arrow-down.png" | asset_url }}"
                    alt=""
                    class="w-12 h-6 object-contain transition-transform duration-300 group-hover:-rotate-90 collection-arrow-img blog-archive-card-title-arrow inline-block align-baseline"
                    width="15px"
                    height="auto"
                    aria-hidden="true"
                    style="margin-bottom:5px; position:relative; left:-5px;"
                  >
                  {{ article.title }}
                </h3>
                <p class="blog-archive-card-desc">
                  {{ article.excerpt | strip_html | truncate: 120 }}
                </p>
              </div>
            </a>
          </article>
        {% endfor %}
      {% endif %}
    </div>
  </section>
{% endif %}

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const gridBtn = document.getElementById('gridViewBtn');
    const listBtn = document.getElementById('listViewBtn');
    const sectionEl = document.querySelector('.blog-archive-section');
    const slider = document.querySelector('.toggle-slider');
    const container = document.getElementById('archiveContainer');
    const buttons = [gridBtn, listBtn];

    function updateSliderPos(isList) {
      const activeBtn = isList ? listBtn : gridBtn;
      const rect = activeBtn.getBoundingClientRect();
      const parentRect = activeBtn.parentNode.getBoundingClientRect();
      slider.style.width = `${rect.width}px`;
      slider.style.left = `${rect.left - parentRect.left}px`;
    }

    function switchView(toList) {
      // Update ARIA states
      buttons.forEach((btn) => {
        const isActive = btn === (toList ? listBtn : gridBtn);
        btn.classList.toggle('active', isActive);
        btn.setAttribute('aria-checked', isActive.toString());
      });

      container.style.opacity = 0;
      setTimeout(() => {
        container.classList.toggle('list-view', toList);
        container.classList.toggle('grid-view', !toList);
        sectionEl.classList.toggle('list-view', toList);
        updateSliderPos(toList);
        container.style.opacity = 1;
      }, 300);
    }

    // Initialize slider
    updateSliderPos(false);
    gridBtn.addEventListener('click', () => switchView(false));
    listBtn.addEventListener('click', () => switchView(true));

    // Handle keyboard navigation for radio group
    buttons.forEach((btn) => {
      btn.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {
          e.preventDefault();
          const currentIndex = buttons.indexOf(e.target);
          const nextIndex =
            e.key === 'ArrowRight'
              ? (currentIndex + 1) % buttons.length
              : (currentIndex - 1 + buttons.length) % buttons.length;
          buttons[nextIndex].focus();
          switchView(nextIndex === 1);
        }
      });
    });

    window.addEventListener('resize', () => updateSliderPos(sectionEl.classList.contains('list-view')));
  });
</script>

{% schema %}
{
  "name": "Featured Blogs",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "tag": "section",
  "class": "my-custom-section",
  "settings": [
    {
      "type": "checkbox",
      "id": "enabled",
      "label": "Enable section",
      "default": true
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Main Heading",
      "default": "Featured Blogs"
    },
    {
      "type": "blog",
      "id": "blog",
      "label": "Select Blog"
    },
    {
      "type": "range",
      "id": "post_limit",
      "label": "Number of Posts to Display",
      "default": 3,
      "min": 3,
      "max": 9,
      "step": 1
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    }
  ],
  "presets": [{ "name": "Featured Blogs" }]
}
{% endschema %}
