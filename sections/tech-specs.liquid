{% if template == 'product' %}
  {%- if section.settings.enable_animations -%}
    {{ 'scroll-animations.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'scroll-animations.js' | asset_url }}" defer></script>
  {%- endif -%}

  {% assign side_padding = settings.side_space %}

  {% if side_padding == blank or side_padding == 0 %}
    {% assign side_padding = 20 %}
  {% endif %}

  <section
    class="tech-specs-container color-{{ section.settings.color_scheme }} box-border overflow-x-hidden {% if section.settings.enable_animations %}scroll-fade-trigger scroll-fade-up{% endif %}"
    style="padding: var(--sections-spacing-top) {{ side_padding }}px var(--sections-spacing-bottom);"
    data-section-id="{{ section.id }}"
  >
    <div class="tech-specs-outer">
      <div class="tech-specs-main flex flex-col lg:flex-row relative items-start">
        <!-- LEFT COLUMN: TECH SPECS -->
        <div
          class="tech-left-box relative z-20 flex flex-col min-h-full w-full lg:w-[80%]"
        >
          <h2
            class="tech-left-box-heading !text-[32px] !font-medium tracking-wide uppercase text-left"
            style="margin-bottom: 24px;"
          >
            {{ section.settings.tech_specs_heading }}
          </h2>
          <div>
            {% for block in section.blocks %}
              {% case block.type %}
                {% when 'fit_pocketing' %}
                  <div {{ block.shopify_attributes }}>
                    <!-- Fit -->
                    <div class="tech-specs-data-border flex flex-row items-center border-b">
                      <span class="tech-specs-data text-[12px] font-normal">
                        {{ block.settings.fit_label }}
                      </span>
                      <span class="text-[12px] font-medium flex items-center  pl-6">
                        {{ product.metafields.tech_specs.fit.value | default: block.settings.fit_value }}
                      </span>
                    </div>
                    <!-- Pocketing -->
                    <div class="tech-specs-data-border flex flex-row items-center border-b">
                      <span class="tech-specs-data text-[13px] font-normal">
                        {{ block.settings.pocketing_label }}
                      </span>
                      <span class="text-[13px] font-medium pl-6">
                        {{- product.metafields.tech_specs.pocketing.value | default: block.settings.pocketing_value -}}
                      </span>
                    </div>
                  </div>

                {% when 'effort_temperature' %}
                  <div {{ block.shopify_attributes }}>
                    <div class="flex flex-col  border-b">
                      <!-- Effort -->
                      <div class="flex flex-col lg:flex-row border-b">
                        <!-- Text Column -->
                        <div class="tech-specs-data-border grid grid-cols-2 ">
                          <div class="tech-specs-data">
                            <div class="text-[13px] font-medium mb-1">
                              {{ block.settings.effort_label }}
                            </div>
                            <div class="text-[12px] font-normal mb-2">
                              {{ block.settings.effort_desc }}
                            </div>
                          </div>
                          <div class="tech-specs-bars flex flex-col items-center justify-center pl-6">
                            <!-- Effort Bar -->
                            <div class="flex justify-between w-full max-w-full" id="effort-bar">
                              {% for i in (1..115) %}
                                <div class="box">|</div>
                              {% endfor %}
                            </div>
                            <!-- Scale Labels -->
                            <div class="flex justify-between text-[13px] w-full mt-1">
                              <span>{{ block.settings.effort_scale_0 }}</span>
                              <span>{{ block.settings.effort_scale_25 }}</span>
                              <span>{{ block.settings.effort_scale_50 }}</span>
                              <span>{{ block.settings.effort_scale_75 }}</span>
                              <span>{{ block.settings.effort_scale_100 }}</span>
                            </div>
                          </div>
                        </div>
                      </div>
                      <!-- Temperature -->
                      <div class="tech-specs-data-border grid grid-cols-2">
                        <div class="tech-specs-data">
                          <div class="text-[13px] font-medium mb-1">
                            {{ block.settings.temperature_label }}
                          </div>
                          <div class="text-[12px] font-normal mb-2">
                            {{ block.settings.temperature_desc }}
                          </div>
                        </div>
                        <div class="tech-specs-bars flex flex-col items-center justify-center pl-6">
                          <!-- Temperature Bar -->
                          <div class="flex justify-between w-full max-w-full" id="temperature-bar">
                            {% for i in (1..115) %}
                              <div class="box">|</div>
                            {% endfor %}
                          </div>
                          <!-- Scale Labels -->
                          <div class="flex justify-between text-[14px] w-full mt-1">
                            <span>{{ block.settings.temp_scale_0 }}</span>
                            <span>{{ block.settings.temp_scale_32 }}</span>
                            <span>{{ block.settings.temp_scale_50 }}</span>
                            <span>{{ block.settings.temp_scale_70 }}</span>
                            <span>{{ block.settings.temp_scale_85 }}</span>
                            <span>{{ block.settings.temp_scale_95 }}</span>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
              {% endcase %}
            {% endfor %}

            <div class="flex flex-col lg:flex-row" style="margin-top: 24px;">
              {% for block in section.blocks %}
                {% if block.type == 'materials' or block.type == 'care' or block.type == 'additional_info' %}
                  {% case block.type %}
                    {% when 'materials' %}
                      <div {{ block.shopify_attributes }} class="w-full lg:w-1/3 mb-2 lg:mb-0">
                        <div class="font-medium text-[16px] mb-3 text-left">
                          {{ block.settings.materials_label }}
                        </div>
                        <div class="text-[13px] font-normal leading-relaxed text-left">
                          {{ product.metafields.tech_specs.materials.value | default: block.settings.materials_value }}
                        </div>
                      </div>
                    {% when 'care' %}
                      <div {{ block.shopify_attributes }} class="w-full lg:w-1/3 mb-2 lg:mb-0">
                        <div class="font-medium text-[16px] mb-3 text-left">
                          {{ block.settings.care_label }}
                        </div>
                        <div class="text-[13px] font-normal leading-relaxed text-left">
                          {% assign care_lines = product.metafields.tech_specs.care.value
                            | default: block.settings.care_value
                            | split: '\n'
                          %}
                          {% for line in care_lines %}
                            <div class="flex items-start gap-2 mb-2">
                              <span>{{ line }}</span>
                            </div>
                          {% endfor %}
                        </div>
                      </div>
                    {% when 'additional_info' %}
                      <div {{ block.shopify_attributes }} class="w-full lg:w-1/3">
                        <div class="text-[13px] font-normal leading-relaxed text-left">
                          {{ block.settings.additional_info }}
                        </div>
                      </div>
                  {% endcase %}
                {% endif %}
              {% endfor %}
            </div>
          </div>
        </div>

        <!-- RIGHT COLUMN: FUNCTIONALITY -->
        {% for block in section.blocks %}
          {% if block.type == 'functionality' %}
            <div
              {{ block.shopify_attributes }}
              class="functionality-right-box relative flex flex-col lg:w-[20%]"
            >
              <h2
                class=" functionality-right-box-heading !text-[32px] !font-medium tracking-wide uppercase"
                style="margin-bottom: 24px;"
              >
                {{ block.settings.features_heading }}
              </h2>
              <div class="flex flex-col" style="gap: var(--gutter-md);">
                <!-- Feature 1 -->
                <div class="flex items-center" style="gap: var(--gutter-md); ">
                  <span
                    class="functionality-icons-background flex-shrink-0 rounded-full flex items-center justify-center"
                    style="background-color: var(--background); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); width:82px; height:83px;"
                  >
                    {% if block.settings.feature_icon_1 != blank %}
                      <img
                        srcset="
                          {%- if block.settings.feature_icon_1.width >= 34 -%}{{ block.settings.feature_icon_1 | image_url: width: 34 }} 34w,{%- endif -%}
                          {%- if block.settings.feature_icon_1.width >= 67 -%}{{ block.settings.feature_icon_1 | image_url: width: 67 }} 67w,{%- endif -%}
                          {%- if block.settings.feature_icon_1.width >= 134 -%}{{ block.settings.feature_icon_1 | image_url: width: 134 }} 134w,{%- endif -%}
                          {{ block.settings.feature_icon_1 | image_url }} {{ block.settings.feature_icon_1.width }}w
                        "
                        sizes="67px"
                        src="{{ block.settings.feature_icon_1 | image_url: width: 67 }}"
                        alt="{{ block.settings.feature_icon_1.alt | escape | default: 'Feature 1 Icon' }}"
                        class="feature-icon"
                        style="width:50px;height:50px;"
                        loading="lazy"
                        decode="async"
                        width="67"
                        height="67"
                      >
                    {% else %}
                      {%- comment -%} Feature Icon 1 {%- endcomment -%}
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="40"
                        height="40"
                        viewBox="0 0 16 16"
                        fill="none"
                        stroke="currentColor"
                      >
                        <path d="M5.00006 8C5.00006 8.79565 5.31613 9.55871 5.87874 10.1213C6.44135 10.6839 7.20441 11 8.00006 11C8.79571 11 9.55877 10.6839 10.1214 10.1213C10.684 9.55871 11.0001 8.79565 11.0001 8" stroke-linecap="round"/>
                        <path d="M0.500061 4.7111C0.500061 4.10998 0.500061 3.80941 0.585877 3.52598C0.671693 3.24255 0.838415 2.99247 1.17186 2.4923L1.3126 2.2812C1.89388 1.40927 2.18453 0.973302 2.62671 0.736651C3.0689 0.5 3.59286 0.5 4.6408 0.5H11.3593C12.4073 0.5 12.9312 0.5 13.3734 0.736651C13.8156 0.973302 14.1062 1.40927 14.6875 2.2812L14.8283 2.4923C15.1617 2.99247 15.3284 3.24255 15.4142 3.52598C15.5001 3.80941 15.5001 4.10998 15.5001 4.7111V11.5C15.5001 13.3856 15.5001 14.3284 14.9143 14.9142C14.3285 15.5 13.3857 15.5 11.5001 15.5H4.50006C2.61444 15.5 1.67163 15.5 1.08585 14.9142C0.500061 14.3284 0.500061 13.3856 0.500061 11.5V4.7111Z"/>
                        <path d="M0.500061 5.5H15.5001" stroke-linecap="round"/>
                      </svg>
                    {% endif %}
                  </span>
                  <div class="functionality-feature-content">
                    <div class="font-medium uppercase text-[14px] mb-4 tracking-wide">
                      {{
                        block.settings.feature1_title
                        | default: product.metafields.functionality.feature_title1.value
                      }}
                    </div>
                    <div class="text-[14px] font-normal leading-relaxed">
                      {{
                        block.settings.feature1_desc
                        | default: product.metafields.functionality.feature_description1.value
                      }}
                    </div>
                  </div>
                </div>

                <!-- Feature 2 -->
                <div class="flex items-center" style="gap: var(--gutter-md); ">
                  <span
                    class="functionality-icons-background flex-shrink-0 rounded-full flex items-center justify-center"
                    style="background-color: var(--background); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); width:82px; height:83px;"
                  >
                    {% if block.settings.feature_icon_2 != blank %}
                      <img
                        srcset="
                          {%- if block.settings.feature_icon_2.width >= 34 -%}{{ block.settings.feature_icon_2 | image_url: width: 34 }} 34w,{%- endif -%}
                          {%- if block.settings.feature_icon_2.width >= 67 -%}{{ block.settings.feature_icon_2 | image_url: width: 67 }} 67w,{%- endif -%}
                          {%- if block.settings.feature_icon_2.width >= 134 -%}{{ block.settings.feature_icon_2 | image_url: width: 134 }} 134w,{%- endif -%}
                          {{ block.settings.feature_icon_2 | image_url }} {{ block.settings.feature_icon_2.width }}w
                        "
                        sizes="67px"
                        src="{{ block.settings.feature_icon_2 | image_url: width: 67 }}"
                        alt="{{ block.settings.feature_icon_2.alt | escape | default: 'Feature 2 Icon' }}"
                        class="feature-icon"
                        style="width:50px;height:50px;"
                        loading="lazy"
                        decode="async"
                        width="67"
                        height="67"
                      >
                    {% else %}
                      {%- comment -%} Feature Icon 2 {%- endcomment -%}
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="40"
                        height="40"
                        viewBox="0 0 18 20"
                        fill="none"
                        stroke="currentColor"
                      >
                        <path d="M16.3612 15C17.1072 15.4561 17.5 15.9734 17.5 16.5C17.5 17.0266 17.1072 17.5439 16.3612 18C15.6152 18.4561 14.5422 18.8348 13.25 19.0981C11.9578 19.3614 10.4921 19.5 9 19.5C7.50794 19.5 6.04216 19.3614 4.75 19.0981C3.45784 18.8348 2.38482 18.4561 1.63878 18C0.892754 17.5439 0.5 17.0266 0.5 16.5C0.5 15.9734 0.892753 15.4561 1.63878 15" stroke-linecap="round"/>
                        <path d="M16.5 8C16.5 13.018 11.0117 16.4027 9.42489 17.2764C9.15683 17.424 8.84317 17.424 8.57511 17.2764C6.98831 16.4027 1.5 13.018 1.5 8C1.5 3.5 5.13401 0.5 9 0.5C13 0.5 16.5 3.5 16.5 8Z"/>
                        <circle cx="9" cy="8" r="3.5"/>
                      </svg>
                    {% endif %}
                  </span>
                  <div class="functionality-feature-content">
                    <div class="font-medium uppercase text-[14px] mb-4 tracking-wide">
                      {{
                        block.settings.feature2_title
                        | default: product.metafields.functionality.feature_title2.value
                      }}
                    </div>
                    <div class="text-[14px] font-normal leading-relaxed">
                      {{
                        block.settings.feature2_desc
                        | default: product.metafields.functionality.feature_description2.value
                      }}
                    </div>
                  </div>
                </div>

                <!-- Feature 3 -->
                <div class="flex items-center" style="gap: var(--gutter-md);">
                  <span
                    class="functionality-icons-background flex-shrink-0 rounded-full flex items-center justify-center"
                    style="background-color: var(--background); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); width:82px; height:83px;"
                  >
                    {% if block.settings.feature_icon_3 != blank %}
                      <img
                        srcset="
                          {%- if block.settings.feature_icon_3.width >= 34 -%}{{ block.settings.feature_icon_3 | image_url: width: 34 }} 34w,{%- endif -%}
                          {%- if block.settings.feature_icon_3.width >= 67 -%}{{ block.settings.feature_icon_3 | image_url: width: 67 }} 67w,{%- endif -%}
                          {%- if block.settings.feature_icon_3.width >= 134 -%}{{ block.settings.feature_icon_3 | image_url: width: 134 }} 134w,{%- endif -%}
                          {{ block.settings.feature_icon_3 | image_url }} {{ block.settings.feature_icon_3.width }}w
                        "
                        sizes="67px"
                        src="{{ block.settings.feature_icon_3 | image_url: width: 67 }}"
                        alt="{{ block.settings.feature_icon_3.alt | escape | default: 'Feature 3 Icon' }}"
                        class="feature-icon"
                        style="width:50px;height:50px;"
                        loading="lazy"
                        decode="async"
                        width="67"
                        height="67"
                      >
                    {% else %}
                      {%- comment -%} Feature Icon 3 {%- endcomment -%}
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="40"
                        height="40"
                        viewBox="0 0 17 18"
                        fill="none"
                        stroke="currentColor"
                      >
                        <path d="M8.37561 16.5L1.05531 7.34963C0.722793 6.93398 0.556534 6.72615 0.511865 6.4757C0.467196 6.22524 0.551358 5.97276 0.719683 5.46778L1.46391 3.23509C1.90393 1.91505 2.12393 1.25503 2.64771 0.877516C3.17148 0.5 3.8672 0.5 5.25865 0.5H11.4926C12.884 0.5 13.5797 0.5 14.1035 0.877516C14.6273 1.25503 14.8473 1.91505 15.2873 3.23509L16.0315 5.46778C16.1999 5.97276 16.284 6.22524 16.2394 6.4757C16.1947 6.72615 16.0284 6.93398 15.6959 7.34963L8.37561 16.5ZM8.37561 16.5L11.8756 5.5M8.37561 16.5L4.87561 5.5M15.8756 6.5L11.8756 5.5M11.8756 5.5L10.3756 1.5M11.8756 5.5H4.87561M6.37561 1.5L4.87561 5.5M4.87561 5.5L0.87561 6.5" stroke-linecap="round"/>
                      </svg>
                    {% endif %}
                  </span>
                  <div class="functionality-feature-content">
                    <div class="font-medium uppercase text-[14px] mb-4 tracking-wide">
                      {{
                        block.settings.feature3_title
                        | default: product.metafields.functionality.feature_title3.value
                      }}
                    </div>
                    <div class="text-[14px] font-normal leading-relaxed">
                      {{
                        block.settings.feature3_desc
                        | default: product.metafields.functionality.feature_description3.value
                      }}
                    </div>
                  </div>
                </div>

                <!-- Feature 4 -->
                <div class="flex items-center" style="gap: var(--gutter-md);">
                  <span
                    class="functionality-icons-background flex-shrink-0 rounded-full flex items-center justify-center"
                    style="background-color: var(--background); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); width:82px; height:83px;"
                  >
                    {% if block.settings.feature_icon_4 != blank %}
                      <img
                        srcset="
                          {%- if block.settings.feature_icon_4.width >= 34 -%}{{ block.settings.feature_icon_4 | image_url: width: 34 }} 34w,{%- endif -%}
                          {%- if block.settings.feature_icon_4.width >= 67 -%}{{ block.settings.feature_icon_4 | image_url: width: 67 }} 67w,{%- endif -%}
                          {%- if block.settings.feature_icon_4.width >= 134 -%}{{ block.settings.feature_icon_4 | image_url: width: 134 }} 134w,{%- endif -%}
                          {{ block.settings.feature_icon_4 | image_url }} {{ block.settings.feature_icon_4.width }}w
                        "
                        sizes="67px"
                        src="{{ block.settings.feature_icon_4 | image_url: width: 67 }}"
                        alt="{{ block.settings.feature_icon_4.alt | escape | default: 'Feature 4 Icon' }}"
                        class="feature-icon"
                        style="width:50px;height:50px;"
                        loading="lazy"
                        decode="async"
                        width="67"
                        height="67"
                      >
                    {% else %}
                      {%- comment -%} Feature Icon 4 {%- endcomment -%}
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="40"
                        height="40"
                        viewBox="0 0 19 19"
                        fill="none"
                        stroke="currentColor"
                      >
                        <path d="M18.1933 11.8294C18.5506 10.4959 18.5964 9.09815 18.3271 7.74419C18.0577 6.39022 17.4806 5.11636 16.6402 4.02115C15.7998 2.92593 14.7187 2.03872 13.4806 1.42815C12.2425 0.817571 10.8805 0.5 9.5 0.5C8.11951 0.5 6.75752 0.817571 5.5194 1.42815C4.28128 2.03872 3.20021 2.92593 2.35982 4.02115C1.51943 5.11636 0.942252 6.39022 0.672932 7.74419C0.403612 9.09815 0.449371 10.4959 0.806668 11.8294" stroke-linecap="round"/>
                        <path d="M10.2657 10.0823C10.7532 10.7916 10.4104 11.8738 9.50001 12.4994C8.58967 13.125 7.45652 13.0571 6.96906 12.3477C6.44955 11.5917 4.65616 7.34088 3.56713 4.71143C3.36203 4.21621 3.9677 3.8 4.35648 4.169C6.42077 6.12825 9.7462 9.32631 10.2657 10.0823Z"/>
                        <path d="M9.5 0.5V2.5" stroke-linecap="round"/>
                        <path d="M15.864 3.13574L14.4498 4.54996" stroke-linecap="round"/>
                        <path d="M18.1934 11.8291L16.2615 11.3115" stroke-linecap="round"/>
                        <path d="M0.806641 11.8291L2.73849 11.3115" stroke-linecap="round"/>
                      </svg>
                    {% endif %}
                  </span>
                  <div class="functionality-feature-content">
                    <div class="font-medium uppercase text-[14px] mb-4 tracking-wide">
                      {{
                        block.settings.feature4_title
                        | default: product.metafields.functionality.feature_title4.value
                      }}
                    </div>
                    <div class="text-[14px] font-normal leading-relaxed">
                      {{
                        block.settings.feature4_desc
                        | default: product.metafields.functionality.feature_description4.value
                      }}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </section>
{% endif %}

<style>
    /* Background image styling */
    .tech-specs-container {
      position: relative;
      {% if section.settings.desktop_background_image != blank %}
        background-image: url('{{ section.settings.desktop_background_image | image_url: width: 1920 }}') !important;
        background-size: cover !important;
        background-position: center !important;
        background-repeat: no-repeat !important;
      {% else %}
        background-color: var(--background) !important;
      {% endif %}
    }
    #effort-bar, #temperature-bar {
        gap: var(--space-mini);
        font-size: 18px;
        font-weight: 700;
      }

    /* Mobile background image with fallback */
    @media (max-width: 768px) {
      .tech-specs-container {
        {% if section.settings.mobile_background_image != blank %}
          background-image: url('{{ section.settings.mobile_background_image | image_url: width: 800 }}') !important;
          background-size: cover !important;
          background-position: center !important;
          background-repeat: no-repeat !important;
        {% elsif section.settings.desktop_background_image != blank %}
          background-image: url('{{ section.settings.desktop_background_image | image_url: width: 1920 }}') !important;
          background-size: cover !important;
          background-position: center !important;
          background-repeat: no-repeat !important;
        {% endif %}
      }
    }

    .tech-specs-data-border{
      border-color: var(--border);
      border-opacity: 0.1;
      gap: var(--space-5xl);
    }
    .tech-left-box, .functionality-right-box{
      color: var(--text);
    }

    .functionality-right-box-heading, .tech-left-box-heading{
      /* Margin set inline for consistency */
    }
    .tech-specs-main{
      gap: var(--space-3xl);
    }
    .tech-specs-data{
      padding: var(--space-3xl) 0;
    }

    .box {
      transition: color 0.6s ease;
      opacity: 0.3;
    }

    .box.filled {
      animation: fillBar 0.9s ease-in-out forwards;
    }

    @keyframes fillBar {
      0% {
        color: var(--text);
        opacity: 0.3;
      }
      100% {
        color: {{ section.settings.bar_color | default: 'red' }};
        opacity: 1;
      }
    }

    /* Hide excess bars on smaller screens */
    @media (max-width: 480px) {
      .box:nth-child(n+51) {
        display: none;
      }
      .tech-left-box{
        padding-right: 0;
      }
    }

    @media (min-width: 481px) and (max-width: 990px) {
      .box:nth-child(n+66) {
        display: none;
      }
    }

    @media (min-width: 991px) and (max-width: 1499px) {
      .box:nth-child(n+80) {
        display: none;
      }
    }

    @media (min-width: 1500px) and (max-width: 1599px) {
      .box:nth-child(n+80) {
        display: none;
      }
    }

    @media (min-width: 1600px) and (max-width: 1699px) {
      .box:nth-child(n+86) {
        display: none;
      }
    }

    @media (min-width: 1700px) and (max-width: 1799px) {
      .box:nth-child(n+96) {
        display: none;
      }
    }

    @media (min-width: 1800px) and (max-width: 1899px) {
      .box:nth-child(n+106) {
        display: none;
      }
    }

    .tech-left-box {
      border-right: 1px solid var(--border);
      padding-right: var(--space-4xl);
    }

    .tech-specs-data {
      width: 230px;
    }

     .functionality-feature-content {
       display: flex;
       flex-direction: column;
       justify-content: center;
       min-height: 83px;
     }

     /* Icon hover effects - desktop only */
     @media (min-width: 768px) {
       .functionality-icons-background {
         transition: all 0.3s ease;
         cursor: pointer;
       }

       .functionality-icons-background:hover {
         transform: scale(1.05);
         box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15) !important;
       }

       .functionality-icons-background:hover .feature-icon {
         filter: brightness(0) saturate(100%) invert(27%) sepia(51%) saturate(2878%) hue-rotate(346deg) brightness(104%) contrast(97%);
       }

       .functionality-icons-background:hover svg {
         color: {{ section.settings.icon_hover_color | default: '#ff6b35' }};
       }
     }
     @media (max-width: 1024px){
      .tech-left-box {
        border-right: none;
      }
      .functionality-right-box {
        padding-left: 0 !important;
      }
  }

    @media screen and (min-width: 750px) {


      #effort-bar, #temperature-bar {
        gap: var(--space-mini);
        font-size: 18px;
        font-weight: 800;
      }
    }


    @media screen and (max-width: 1445px) {
      .tech-specs-data-border{
        gap: var(--space-xl);
      }
      #effort-bar, #temperature-bar {
        gap: var(--space-mini);
      }
    }
    @media (max-width: 400px){
      #effort-bar, #temperature-bar {
        gap: var(--space-mini);
      }
    }


    @media (max-width: 700px) {
      .tech-specs-bars {
        padding-left: 0;
        width: 100%;
      }
      .tech-specs-data {
        width: 170px;
      }
      .tech-width {
        width: auto;
      }
      .functionality-icons-background{
        height: 63px !important;
        width: 62px !important;
      }

      .functionality-icons {
        width: 50px;
        height: 51px;
      }
      .tech-specs-bars .box:nth-child(n + 51) {
        display: none;
      }
      .tech-left-box {
        border-right: none;
        padding-right: 0;
      }
    }
</style>

<script>
  function updateTechSpecBars(animate = true) {
    const effortValue = {{ product.metafields.tech_specs.effort.value | default: 0 }};
    const tempMin = {{ product.metafields.tech_specs.temp_min.value | default: 0 }};
    const tempMax = {{ product.metafields.tech_specs.temp_max.value | default: 0 }};

    const width = window.innerWidth;
    let totalBars;

    if (width <= 480) {
      totalBars = 50;
    } else if (width <= 990) {
      totalBars = 65;
    } else if (width < 1600) {
      totalBars = 79;
    } else if (width < 1700) {
      totalBars = 85;
    } else if (width < 1800) {
      totalBars = 95;
    } else if (width < 1900) {
      totalBars = 105;
    } else {
      totalBars = 115;
    }

    // Effort bars with loading animation
    const effortBar = document.getElementById('effort-bar');
    if (effortBar && effortValue > 0) {
      const effortBars = effortBar.querySelectorAll('.box');
      const effortFilled = Math.floor((effortValue * totalBars) / 100);

      effortBars.forEach((bar, i) => {
        if (i < effortFilled) {
          if (animate && !bar.classList.contains('filled')) {
            // Add staggered delay for loading animation effect
            setTimeout(() => {
              bar.classList.add('filled');
            }, i * 40); // 15ms delay between each bar
          } else if (!animate) {
            bar.classList.add('filled');
          }
        } else {
          bar.classList.remove('filled');
        }
      });
    }

    // Temperature bars with loading animation
    const temperatureBar = document.getElementById('temperature-bar');
    if (temperatureBar && tempMin >= 0 && tempMax > 0 && tempMax > tempMin) {
      const tempBars = temperatureBar.querySelectorAll('.box');
      const tempStartPos = Math.round((tempMin / 95) * (totalBars - 1));
      const tempEndPos = Math.round((tempMax / 95) * (totalBars - 1));
      let animationIndex = 0;

      tempBars.forEach((bar, i) => {
        if (i >= tempStartPos && i <= tempEndPos) {
          if (animate && !bar.classList.contains('filled')) {
            // Add staggered delay for loading animation effect
            setTimeout(() => {
              bar.classList.add('filled');
            }, animationIndex * 40); // 15ms delay between each bar
            animationIndex++;
          } else if (!animate) {
            bar.classList.add('filled');
          }
        } else {
          bar.classList.remove('filled');
        }
      });
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    const techSpecsSection = document.querySelector('.tech-specs-container');
    let hasAnimated = false;
    let lastWidth = window.innerWidth;

    if (techSpecsSection) {
      const hasScrollAnimation = techSpecsSection.classList.contains('scroll-fade-trigger');
      // Check if animations are globally disabled via theme settings
      const globalAnimationsEnabled = document.body.dataset.scrollAnimations !== 'false';

      if (hasScrollAnimation && globalAnimationsEnabled) {
        // Wait for scroll animation to complete, then trigger bar animation
        const checkForAnimate = setInterval(() => {
          if (techSpecsSection.classList.contains('animate') && !hasAnimated) {
            hasAnimated = true;
            clearInterval(checkForAnimate);
            // Delay to let scroll animation complete (0.8s + buffer)
            setTimeout(() => {
              updateTechSpecBars(true);
            }, 900);
          }
        }, 100);

        // Fallback: if animate class doesn't appear within 5 seconds, trigger anyway
        setTimeout(() => {
          if (!hasAnimated) {
            clearInterval(checkForAnimate);
            hasAnimated = true;
            updateTechSpecBars(true);
          }
        }, 5000);
      } else {
        // No scroll animation or animations disabled globally, use original intersection observer
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            // Trigger animation when section is at least 50% visible
            if (entry.isIntersecting && entry.intersectionRatio >= 0.9 && !hasAnimated) {
              hasAnimated = true;
              updateTechSpecBars(true);
            }
          });
        }, {
          threshold: [0.9] // Trigger when 50% of section is visible
        });

        // Start observing the tech specs section
        observer.observe(techSpecsSection);
      }
    }

    window.addEventListener('resize', function() {
      const width = window.innerWidth;

      // Check if we crossed a breakpoint
      const breakpoints = [481, 991, 1600, 1700, 1800, 1900];
      let crossedBreakpoint = false;

      for (let bp of breakpoints) {
        if ((lastWidth < bp && width >= bp) || (lastWidth >= bp && width < bp)) {
          crossedBreakpoint = true;
          break;
        }
      }

      if (crossedBreakpoint && hasAnimated) {
        lastWidth = width;
        updateTechSpecBars(false);
      }
    });
  });
</script>
{% schema %}
{
  "name": "Tech Specs",
  "tag": "section",
  "enabled_on": { "templates": ["product"] },
  "settings": [
    {
      "type": "text",
      "id": "tech_specs_heading",
      "label": "Section Heading",
      "default": "SPECIFICATIONS",
      "info": "Main heading for this section"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-2"
    },
    {
      "type": "color",
      "id": "bar_color",
      "label": "Bar Fill Color",
      "default": "#ff0000"
    },
    {
      "type": "color",
      "id": "icon_hover_color",
      "label": "Icon Hover Color",
      "default": "#ff6b35"
    },
    {
      "type": "checkbox",
      "id": "enable_animations",
      "label": "Enable scroll animations",
      "default": true,
      "info": "Animate section as it scrolls into view. Bar animations will trigger after scroll animation completes. Respects user's motion preferences."
    },
    {
      "type": "image_picker",
      "id": "desktop_background_image",
      "label": "Desktop Background Image",
      "info": "Recommended size: 1920x1080px. This image will be shown on desktop and tablet devices."
    },
    {
      "type": "image_picker",
      "id": "mobile_background_image",
      "label": "Mobile Background Image",
      "info": "Recommended size: 800x1200px. This image will be shown on mobile devices (768px and below). Falls back to desktop image if not set."
    }
  ],
  "blocks": [
    {
      "type": "fit_pocketing",
      "name": "Specification Pair",
      "settings": [
        {
          "type": "text",
          "id": "fit_label",
          "label": "First Specification Label",
          "default": "Specification",
          "info": "Example: Material, Weight, Dimensions, Style, etc."
        },
        {
          "type": "text",
          "id": "fit_value",
          "label": "First Specification Value",
          "default": "Premium Quality",
          "info": "The value for the first specification"
        },
        {
          "type": "text",
          "id": "pocketing_label",
          "label": "Second Specification Label",
          "default": "Specification",
          "info": "Example: Size, Capacity, Finish, Features, etc."
        },
        {
          "type": "text",
          "id": "pocketing_value",
          "label": "Second Specification Value",
          "default": "Standard Size",
          "info": "The value for the second specification"
        }
      ]
    },
    {
      "type": "functionality",
      "name": "Features",
      "settings": [
        {
          "type": "text",
          "id": "features_heading",
          "label": "Features Heading",
          "default": "FEATURES"
        },
        {
          "type": "text",
          "id": "feature1_title",
          "label": "Feature 1 Title",
          "default": "FEATURE 1"
        },
        {
          "type": "textarea",
          "id": "feature1_desc",
          "label": "Feature 1 Description",
          "default": "Briefly describe the first feature here. Highlight the main benefit and explain how it improves the product experience for the customer."
        },
        {
          "type": "image_picker",
          "id": "feature_icon_1",
          "label": "Feature 1 Icon"
        },
        {
          "type": "text",
          "id": "feature2_title",
          "label": "Feature 2 Title",
          "default": "FEATURE 2"
        },
        {
          "type": "textarea",
          "id": "feature2_desc",
          "label": "Feature 2 Description",
          "default": "Use this space to describe the second feature in detail. Explain its purpose, why it matters, and how it enhances usability, comfort, or performance for users."
        },
        {
          "type": "image_picker",
          "id": "feature_icon_2",
          "label": "Feature 2 Icon"
        },
        {
          "type": "text",
          "id": "feature3_title",
          "label": "Feature 3 Title",
          "default": "FEATURE 3"
        },
        {
          "type": "textarea",
          "id": "feature3_desc",
          "label": "Feature 3 Description",
          "default": "Describe the third feature clearly. Focus on its unique quality, the value it adds, and how it benefits users during everyday use."
        },
        {
          "type": "image_picker",
          "id": "feature_icon_3",
          "label": "Feature 3 Icon"
        },
        {
          "type": "text",
          "id": "feature4_title",
          "label": "Feature 4 Title",
          "default": "FEATURE 4"
        },
        {
          "type": "textarea",
          "id": "feature4_desc",
          "label": "Feature 4 Description",
          "default": "Provide details about the fourth feature here. Explain the function, the advantage it gives, and why this feature sets the product apart from alternatives."
        },
        {
          "type": "image_picker",
          "id": "feature_icon_4",
          "label": "Feature 4 Icon"
        }
      ]
    },
    {
      "type": "effort_temperature",
      "name": "Measurement Scales",
      "settings": [
        {
          "type": "text",
          "id": "effort_label",
          "label": "First Scale Label",
          "default": "Intensity",
          "info": "Example: Intensity, Performance, Quality, Strength, etc."
        },
        {
          "type": "text",
          "id": "effort_desc",
          "label": "First Scale Description",
          "default": "Designed for various use cases and intensity levels.",
          "info": "Describe what this measurement represents"
        },
        {
          "type": "text",
          "id": "temperature_label",
          "label": "Second Scale Label",
          "default": "Range",
          "info": "Example: Range, Durability, Versatility, Coverage, etc."
        },
        {
          "type": "text",
          "id": "temperature_desc",
          "label": "Second Scale Description",
          "default": "Suitable for a wide range of conditions and applications.",
          "info": "Describe what this measurement represents"
        },
        {
          "type": "text",
          "id": "effort_scale_0",
          "label": "First Scale: Point 1",
          "default": "Low",
          "info": "First point on the scale (0%)"
        },
        {
          "type": "text",
          "id": "effort_scale_25",
          "label": "First Scale: Point 2",
          "default": "25%",
          "info": "Second point (25%)"
        },
        {
          "type": "text",
          "id": "effort_scale_50",
          "label": "First Scale: Point 3",
          "default": "50%",
          "info": "Middle point (50%)"
        },
        {
          "type": "text",
          "id": "effort_scale_75",
          "label": "First Scale: Point 4",
          "default": "75%",
          "info": "Fourth point (75%)"
        },
        {
          "type": "text",
          "id": "effort_scale_100",
          "label": "First Scale: Point 5",
          "default": "High",
          "info": "Maximum point (100%)"
        },
        {
          "type": "text",
          "id": "temp_scale_0",
          "label": "Second Scale: Point 1",
          "default": "Min",
          "info": "First point on the scale"
        },
        {
          "type": "text",
          "id": "temp_scale_32",
          "label": "Second Scale: Point 2",
          "default": "20",
          "info": "Second point"
        },
        {
          "type": "text",
          "id": "temp_scale_50",
          "label": "Second Scale: Point 3",
          "default": "40",
          "info": "Third point"
        },
        {
          "type": "text",
          "id": "temp_scale_70",
          "label": "Second Scale: Point 4",
          "default": "60",
          "info": "Fourth point"
        },
        {
          "type": "text",
          "id": "temp_scale_85",
          "label": "Second Scale: Point 5",
          "default": "80",
          "info": "Fifth point"
        },
        {
          "type": "text",
          "id": "temp_scale_95",
          "label": "Second Scale: Point 6",
          "default": "Max",
          "info": "Maximum point"
        }
      ]
    },
    {
      "type": "materials",
      "name": "Text Column 1",
      "settings": [
        {
          "type": "text",
          "id": "materials_label",
          "label": "Column Heading",
          "default": "Details",
          "info": "Example: Materials, Specifications, Components, etc."
        },
        {
          "type": "text",
          "id": "materials_value",
          "label": "Column Content",
          "default": "Add your product details here",
          "info": "Can reference product metafields if configured"
        }
      ]
    },
    {
      "type": "care",
      "name": "Text Column 2",
      "settings": [
        {
          "type": "text",
          "id": "care_label",
          "label": "Column Heading",
          "default": "Information",
          "info": "Example: Care, Instructions, Usage, Guidelines, etc."
        },

        {
          "type": "textarea",
          "id": "care_value",
          "label": "Column Content (use \\n for new lines)",
          "default": "Add your product information here.",
          "info": "Can reference product metafields if configured"
        }
      ]
    },
    {
      "type": "additional_info",
      "name": "Text Column 3",
      "settings": [
        {
          "type": "textarea",
          "id": "additional_info",
          "label": "Column Content (HTML supported)",
          "default": "Add additional product information here."
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Tech Specs",
      "blocks": [
        {
          "type": "fit_pocketing"
        },
        {
          "type": "functionality"
        },
        {
          "type": "effort_temperature"
        },
        {
          "type": "materials"
        },
        {
          "type": "care"
        },
        {
          "type": "additional_info"
        }
      ]
    }
  ]
}
{% endschema %}
