{% schema %}
{
  "name": "Header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo"
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Main Menu"
    },
    {
      "type": "image_picker",
      "id": "dropdown_icon",
      "label": "Dropdown Icon"
    }
  ]
}
{% endschema %}

<header class="w-full bg-white border-b shadow-sm !sticky top-0 z-50">
  <div class="w-full px-4 py-3 flex items-center justify-between">
    <!-- Left: Logo -->
    <div class="flex items-center space-x-4">
      <a href="/">
        {% if section.settings.logo != blank %}
          <img src="{{ section.settings.logo | image_url }}" width="100%" height="auto" alt="Logo" class="h-22 w-auto">
        {% else %}
          <span class="text-3xl font-semibold">BlackBytte</span>
        {% endif %}
      </a>
    </div>
    <!-- Right: Menu & Actions -->
    <div class="flex items-center justify-between w-full px-10 mx-auto">
      <!-- Desktop Menu -->
      <nav class="menu-desktop hidden lg:!flex space-x-8">
        {% assign menu = linklists[section.settings.menu] %}
        {% if menu.links != blank %}
          {% for link in menu.links %}
            <div class="group flex items-center ">
              <a href="{{ link.url }}" class="text-black hover:border-b-2 font-medium">
                {{ link.title }}
              </a>
              {% if link.links.size > 0 %}
                <svg
                  class="w-4 h-4 ml-1 transition-transform duration-300 group-hover:rotate-180"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  aria-hidden="true"
                >
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
                <div
                  class="absolute left-0 top-full mt-0 hidden group-hover:!flex flex-col bg-white border border-gray-200 shadow-lg z-50 w-full opacity-0 translate-y-[-10px] transition-all duration-600 group-hover:opacity-100 group-hover:translate-y-0"
                  onmouseenter="this.classList.add('hovering')"
                  onmouseleave="this.classList.remove('hovering')"
                >
                  <div class="flex items-center justify-between">
                    <div class="px-2 w-1/4">
                      {% for child in link.links %}
                        <a
                          href="{{ child.url }}"
                          class="block px-4 py-4 text-2xl text-gray-700 hover:bg-blue-300 hover:text-black font-medium"
                        >
                          {{ child.title }}
                        </a>
                      {% endfor %}
                    </div>
                    <div class="w-3/4 flex items-center justify-end">
                      <div class="px-4">IMg1</div>
                      <div class="px-4">IMg2</div>
                    </div>
                  </div>

                  <!-- Bottom: Scrolling Text -->
                  <style>
                    .marquee {
                      background-color: black;
                      color: white;
                      font-size: 1.25rem; /* equivalent to text-xl if using Tailwind */
                      font-weight: 600; /* semibold */
                      text-align: center;
                      padding: 0.5rem 0; /* equivalent to py-2 in Tailwind */
                      overflow: hidden;
                      position: relative;
                      white-space: nowrap;
                    }

                    .marquee-content {
                      display: inline-block;
                      animation: marqueeAnimation 10s linear infinite;
                    }

                    @keyframes marqueeAnimation {
                      0% {
                        transform: translateX(100%);
                      }
                      100% {
                        transform: translateX(-100%);
                      }
                    }
                  </style>
                  <div class="marquee">
                    <div class="marquee-content bg-black text-white text-xl font-semibold text-center py-2">
                      → EVOLVE RUNNING → EVOLVE RUNNING → EVOLVE RUNNING →
                    </div>
                  </div>
                </div>
              {% endif %}
            </div>
          {% endfor %}
        {% endif %}
      </nav>

      <!-- Actions -->
      <div class="flex items-center space-x-6">
        <!-- Search -->
        <a href="/search" class="text-black hover:text-gray-700">
          <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5a7 7 0 100 14 7 7 0 000-14zm0 2a5 5 0 110 10 5 5 0 010-10zM16.293 16.293l4.414-4.414" />
          </svg>
        </a>

        <!-- Login -->
        <a href="/account/login" class="text-black hover:text-gray-700">
          <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.121 17.804A4 4 0 018 16h8a4 4 0 012.879 1.804M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
          </svg>
        </a>

        <!-- Cart -->
        <a href="/cart" class="relative text-black hover:text-gray-700">
          <svg class="w-6 h-6" fill="none" viewBox="0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-1.293 2.707a1 1 0 00.293 1.414l1.414 1.414A1 1 0 008 18h8a1 1 0 00.707-.293l1.414-1.414a1 1 0 00.293-1.414L17 13" />
          </svg>
          <span class="absolute -top-2 -right-2 bg-red-600 text-white text-xs w-5 h-5 flex items-center justify-center rounded-full">
            {{ cart.item_count }}
          </span>
        </a>

        <!-- Hamburger Menu -->
        <button id="hamburger-menu" class="lg:hidden text-black hover:text-gray-700">
          <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="hidden lg:hidden bg-white border-t border-gray-200 shadow-lg w-full">
    <nav class="flex flex-col space-y-4 p-6">
      {% if menu.links != blank %}
        {% for link in menu.links %}
          <div class="mobile-menu-item">
            <a href="{{ link.url }}" class="block text-xl text-black hover:underline font-medium py-2">
              {{ link.title }}
            </a>
            {% if link.links.size > 0 %}
              <div class="ml-4 mt-2 space-y-2">
                {% for child in link.links %}
                  <a href="{{ child.url }}" class="block text-lg text-gray-700 hover:text-black py-2">
                    {{ child.title }}
                  </a>
                {% endfor %}
              </div>
            {% endif %}
          </div>
        {% endfor %}
      {% endif %}
    </nav>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const hamburgerMenu = document.getElementById('hamburger-menu');
    const mobileMenu = document.getElementById('mobile-menu');

    if (hamburgerMenu && mobileMenu) {
      hamburgerMenu.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }

    const menuItems = document.querySelectorAll('.group');

    menuItems.forEach((item) => {
      const submenu = item.querySelector('.group-hover\\:flex');

      if (submenu) {
        item.addEventListener('mouseleave', () => {
          setTimeout(() => {
            if (!submenu.classList.contains('hovering')) {
              submenu.classList.add('hidden');
            }
          }, 200); // Add a slight delay before hiding
        });

        submenu.addEventListener('mouseenter', () => {
          submenu.classList.add('hovering');
        });

        submenu.addEventListener('mouseleave', () => {
          submenu.classList.remove('hovering');
        });
      }
    });
  });
</script>
