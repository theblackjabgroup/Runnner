<style>
  .prod-diff-section {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100vw;
    overflow: hidden;
    background-color: rgb(242, 242, 242);
  }

  .prod-diff-container {
    position: relative;
    width: 100vw;
  }

  .prod-diff-wrapper {
    position: absolute;
    top: 0;
    overflow: hidden;
  }

  .prod-diff-wrapper.prod-diff-left {
    left: 0;
    width: 50%;
    display: block;
    unicode-bidi: isolate;
  }

  .prod-diff-wrapper.prod-diff-right {
    right: 0;
    width: 50%;
    display: block;
    unicode-bidi: isolate;
  }

  .prod-diff-img {
    position: absolute;
    left: 0;
    width: 100vw;
    height: auto;
    object-fit: cover;
    max-width: none;
    display: block;
  }

  .prod-diff-slider-container {
    position: absolute;
    width: 100%;
    top: 0;
    /* z-index: 10; */
  }

  .prod-diff-slider-divider {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 4px;
    left: 50%;
    transform: translateX(-50%);
    /* z-index: 15; */
    opacity: 1;
  }

  .prod-diff-slider-handle {
    position: absolute;
    height: 50px;
    width: 92px;
    background-color: black;
    border: 2px solid white;
    border-radius: 25px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    cursor: grab;
    display: flex !important;
    justify-content: space-between;
    align-items: center;
    /* z-index: 10; */
    opacity: 1;
    pointer-events: auto;
    padding: 0 7px;
  }

  .prod-diff-slider-handle svg {
    width: 27px;
    height: 27px;
    fill: white;
  }

  .prod-diff-wrapper.prod-diff-left .prod-diff-img {
    left: 0;
  }

  /* This will be dynamically set by JavaScript using percentages */
  .prod-diff-wrapper.prod-diff-right .prod-diff-img {
    left: -50%;
  }

  .prod-diff-product-info {
    position: absolute;
    bottom: 20px;
    padding: 10px 15px;
    max-width: 300px;
    width: auto;
  }

  .prod-diff-product-info.left {
    left: 20px;
    text-align: left;
  }

  .prod-diff-product-info.right {
    right: 20px;
    text-align: right;
  }

  .prod-diff-product-name {
    font-family: var(--font-body-family);
    font-style: var(--font-body-style);
    font-weight: var(--font-body-weight);
    font-size: 20px;
    color: var(--text);
    margin: 0 0 6px 0;
    line-height: 1.3;
  }

  .prod-diff-product-price {
    font-family: var(--font-body-family);
    font-style: var(--font-body-style);
    font-weight: var(--font-body-weight);
    font-size: 20px;
    color: var(--text);
    margin: 0;
  }

  @media (max-width: 768px) {
    .prod-diff-product-info {
      padding: 8px 12px;
      bottom: 15px;
      max-width: 200px;
    }

    .prod-diff-product-info.left {
      left: 10px;
      bottom: 0vw;
    }

    .prod-diff-product-info.right {
      right: 10px;
      bottom: 0vw;
    }

    .prod-diff-product-name {
      font-size: 16px;
    }

    .prod-diff-product-price {
      font-size: 16px;
    }
  }
</style>

{% if section.settings.enabled %}
  {% if section.settings.color_scheme %}
    {% assign section_classes_fc = section_classes_fc | append: ' color-' | append: section.settings.color_scheme %}
  {% endif %}
  {% comment %} Calculate the maximum height from both product images {% endcomment %}
  {% assign left_product = all_products[section.settings.left_product] %}
  {% assign right_product = all_products[section.settings.right_product] %}

  {% assign max_aspect_ratio = 0 %}

  {% if left_product and left_product.featured_image %}
    {% assign left_aspect_ratio = left_product.featured_image.aspect_ratio %}
    {% if left_aspect_ratio < max_aspect_ratio or max_aspect_ratio == 0 %}
      {% assign max_aspect_ratio = left_aspect_ratio %}
    {% endif %}
  {% endif %}

  {% if right_product and right_product.featured_image %}
    {% assign right_aspect_ratio = right_product.featured_image.aspect_ratio %}
    {% if right_aspect_ratio < max_aspect_ratio or max_aspect_ratio == 0 %}
      {% assign max_aspect_ratio = right_aspect_ratio %}
    {% endif %}
  {% endif %}

  {% comment %} Convert aspect ratio to CSS calc for responsive height {% endcomment %}
  {% if max_aspect_ratio > 0 %}
    {% assign height_vw = 100.0 | divided_by: max_aspect_ratio %}
  {% else %}
    {% assign height_vw = 50 %}
  {% endif %}

  <section class="prod-diff-section" style="height: {{ height_vw }}vw;">
    <div class="prod-diff-container" style="height: {{ height_vw }}vw;">
      <div class="prod-diff-wrapper prod-diff-left" style="height: {{ height_vw }}vw;">
        {% if left_product and left_product.featured_image %}
          <img
            srcset="
              {% if left_product.featured_image.width >= 375 %}{{ left_product.featured_image | image_url: width: 375 }} 375w,{% endif %}
              {% if left_product.featured_image.width >= 550 %}{{ left_product.featured_image | image_url: width: 550 }} 550w,{% endif %}
              {% if left_product.featured_image.width >= 750 %}{{ left_product.featured_image | image_url: width: 750 }} 750w,{% endif %}
              {% if left_product.featured_image.width >= 1100 %}{{ left_product.featured_image | image_url: width: 1100 }} 1100w,{% endif %}
              {% if left_product.featured_image.width >= 1500 %}{{ left_product.featured_image | image_url: width: 1500 }} 1500w,{% endif %}
              {% if left_product.featured_image.width >= 2200 %}{{ left_product.featured_image | image_url: width: 2200 }} 2200w,{% endif %}
              {{ left_product.featured_image | image_url }} {{ left_product.featured_image.width }}w
            "
            src="{{ left_product.featured_image | image_url: width: 1200 }}"
            alt="{{ left_product.title | escape }}"
            class="prod-diff-img"
            width="600"
            height="auto"
            style="height: auto; width: 100vw;"
          >
        {% else %}
          <div style="width: 500px; height: 100%;">
            {{ 'collection-1' | placeholder_svg_tag }}
          </div>
        {% endif %}
      </div>

      <div class="prod-diff-wrapper prod-diff-right" style="height: {{ height_vw }}vw;">
        {% if right_product and right_product.featured_image %}
          <img
            srcset="
              {% if right_product.featured_image.width >= 375 %}{{ right_product.featured_image | image_url: width: 375 }} 375w,{% endif %}
              {% if right_product.featured_image.width >= 550 %}{{ right_product.featured_image | image_url: width: 550 }} 550w,{% endif %}
              {% if right_product.featured_image.width >= 750 %}{{ right_product.featured_image | image_url: width: 750 }} 750w,{% endif %}
              {% if right_product.featured_image.width >= 1100 %}{{ right_product.featured_image | image_url: width: 1100 }} 1100w,{% endif %}
              {% if right_product.featured_image.width >= 1500 %}{{ right_product.featured_image | image_url: width: 1500 }} 1500w,{% endif %}
              {% if right_product.featured_image.width >= 2200 %}{{ right_product.featured_image | image_url: width: 2200 }} 2200w,{% endif %}
              {{ right_product.featured_image | image_url }} {{ right_product.featured_image.width }}w
            "
            src="{{ right_product.featured_image | image_url: width: 1200 }}"
            alt="{{ right_product.title | escape }}"
            class="prod-diff-img"
            width="600"
            height="auto"
            style="height: auto; width: 100vw;"
          >
        {% else %}
          <div style="width: 500px; height: 100%;">
            {{ 'collection-1' | placeholder_svg_tag }}
          </div>
        {% endif %}
      </div>

      <div class="prod-diff-slider-container" style="height: {{ height_vw }}vw;">
        <div class="prod-diff-slider-divider">
          <div class="prod-diff-slider-handle">
            <svg width="25" height="31" viewBox="0 0 25 31" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15.4727 1.85254L1.62745 15.6977M1.62745 15.6977L15.4727 29.543M1.62745 15.6977L24.4498 15.6977" stroke="white" stroke-width="3" stroke-linejoin="round"/>
            </svg>

            <svg width="25" height="31" viewBox="0 0 25 31" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M9.58594 1.85254L23.4311 15.6977M23.4311 15.6977L9.58594 29.543M23.4311 15.6977L0.608765 15.6977" stroke="white" stroke-width="3" stroke-linejoin="round"/>
            </svg>
          </div>
        </div>
      </div>

      <!-- Product Information Divs -->
      {% if left_product %}
        <div class="prod-diff-product-info left">
          <h3 class="prod-diff-product-name">{{ left_product.title }}</h3>
          <p class="prod-diff-product-price">{{ left_product.price | money }}</p>
        </div>
      {% endif %}

      {% if right_product %}
        <div class="prod-diff-product-info right">
          <h3 class="prod-diff-product-name">{{ right_product.title }}</h3>
          <p class="prod-diff-product-price">{{ right_product.price | money }}</p>
        </div>
      {% endif %}
    </div>
  </section>
{% endif %}

<script>
  function initProductDifferenceSlider() {
    const sliderDivider = document.querySelector('.prod-diff-slider-divider');
    const sliderHandle = document.querySelector('.prod-diff-slider-handle');
    const container = document.querySelector('.prod-diff-container');

    // Return early if elements don't exist
    if (!sliderDivider || !sliderHandle || !container) return;

    let isDragging = false;
    const leftContainer = document.querySelector('.prod-diff-wrapper.prod-diff-left');
    const rightContainer = document.querySelector('.prod-diff-wrapper.prod-diff-right');
    const rightImg = document.querySelector('.prod-diff-wrapper.prod-diff-right .prod-diff-img');

    function getOffsetX(e) {
      if (e.touches) {
        return e.touches[0].clientX;
      } else {
        return e.clientX;
      }
    }

    function updateImagePositions() {
      if (!rightImg || !leftContainer) return;
      const containerWidth = container.offsetWidth;
      const leftWidth = leftContainer.offsetWidth;
      const rightImgLeftPosition = -leftWidth;
      rightImg.style.left = rightImgLeftPosition + 'px';
    }

    function onDrag(e) {
      if (!isDragging) return;
      if (e.cancelable) e.preventDefault();
      const rect = container.getBoundingClientRect();
      let x = getOffsetX(e) - rect.left;
      x = Math.max(0, Math.min(x, rect.width));
      const percent = (x / rect.width) * 100;
      sliderDivider.style.left = percent + '%';
      leftContainer.style.width = percent + '%';
      rightContainer.style.width = 100 - percent + '%';
      updateImagePositions();
    }

    function stopDrag() {
      isDragging = false;
      container.removeEventListener('mousemove', onDrag);
      container.removeEventListener('touchmove', onDrag);
      window.removeEventListener('mouseup', stopDrag);
      window.removeEventListener('touchend', stopDrag);
      window.removeEventListener('touchcancel', stopDrag);
    }

    // Allow dragging from both divider and handle
    [sliderDivider, sliderHandle].forEach(function (el) {
      el.addEventListener('mousedown', function (e) {
        e.preventDefault();
        isDragging = true;
        onDrag(e); // update position immediately
        container.addEventListener('mousemove', onDrag);
        window.addEventListener('mouseup', stopDrag);
      });
      el.addEventListener('touchstart', function (e) {
        isDragging = true;
        onDrag(e); // update position immediately
        container.addEventListener('touchmove', onDrag, { passive: false });
        window.addEventListener('touchend', stopDrag);
        window.addEventListener('touchcancel', stopDrag);
      });
    });

    // Handle window resize to update positions
    window.addEventListener('resize', function () {
      updateImagePositions();
    });

    // Initialize positions
    updateImagePositions();
  }

  // Make function globally available for theme editor
  window.initProductDifferenceSlider = initProductDifferenceSlider;

  document.addEventListener('DOMContentLoaded', function () {
    initProductDifferenceSlider();
  });

  // Theme Editor Event Handlers for proper reloading when products change
  if (typeof Shopify !== 'undefined' && Shopify.designMode) {
    document.addEventListener('shopify:section:load', function (event) {
      if (event.target.querySelector('.prod-diff-section')) {
        // Small delay to ensure DOM is fully updated
        setTimeout(function () {
          initProductDifferenceSlider();
        }, 10);
      }
    });

    document.addEventListener('shopify:section:select', function (event) {
      if (event.target.querySelector('.prod-diff-section')) {
        setTimeout(function () {
          initProductDifferenceSlider();
        }, 10);
      }
    });

    document.addEventListener('shopify:block:select', function (event) {
      const productDiffSection = event.target.closest('.shopify-section')?.querySelector('.prod-diff-section');
      if (productDiffSection) {
        setTimeout(function () {
          initProductDifferenceSlider();
        }, 10);
      }
    });

    // Listen for setting changes that might affect product selection
    document.addEventListener('shopify:section:reorder', function (event) {
      const productDiffSection = document.querySelector('.prod-diff-section');
      if (productDiffSection) {
        setTimeout(function () {
          initProductDifferenceSlider();
        }, 10);
      }
    });
  }
</script>

{% schema %}
{
  "name": "Product Difference Slider",
  "settings": [
    {
      "type": "checkbox",
      "id": "enabled",
      "label": "Enable section",
      "default": true
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "product",
      "id": "left_product",
      "label": "Left Product"
    },
    {
      "type": "product",
      "id": "right_product",
      "label": "Right Product"
    }
  ],
  "presets": [
    {
      "name": "Product Difference Slider"
    }
  ]
}
{% endschema %}
