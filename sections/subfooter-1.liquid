{% schema %}
{
  "name": "Localization Selector",
  "class": "shopify-section-localization",
  "settings": [
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border Color",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "hover_background",
      "label": "Hover Background Color",
      "default": "#f5f5f5"
    },
    {
      "type": "color",
      "id": "dropdown_background",
      "label": "Dropdown Background Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "dropdown_border",
      "label": "Dropdown Border Color",
      "default": "#e0e0e0"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "section_height",
      "label": "Section Height (px)",
      "min": 30,
      "max": 80,
      "step": 5,
      "default": 40
    }
  ],
  "presets": [
    {
      "name": "Localization Selector",
      "category": "Footer"
    }
  ]
}
{% endschema %}

<section class="localization-section" {{ section.shopify_attributes }}>
  <div class="footer-localization">
    <!-- Country Selector -->
    <div class="footer__country-selector">
      <localization-form>
        {% form 'localization', id: 'FooterCountryForm', class: 'footer-country-form' %}
          <div class="disclosure-wrapper country-disclosure">
            <button type="button" class="disclosure-button" aria-expanded="false">
              <span class="selected-value">{{ localization.country.name }} ({{ localization.country.currency.iso_code }})</span>
              <svg class="disclosure-arrow" width="12" height="8" viewBox="0 0 12 8" fill="none">
                <path d="M1 1L6 6L11 1" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </button>
            <div class="disclosure-content">
              <div class="disclosure-options">
                {% for country in localization.available_countries %}
                  <button type="submit" name="country_code" value="{{ country.iso_code }}" 
                    class="disclosure-option {% if country.iso_code == localization.country.iso_code %}selected{% endif %}">
                    {{ country.name }} ({{ country.currency.iso_code }})
                  </button>
                {% endfor %}
              </div>
            </div>
          </div>
        {% endform %}
      </localization-form>
    </div>

    <!-- Language Selector -->
    <div class="footer__language-selector">
      <localization-form>
        {% form 'localization', id: 'FooterLanguageForm', class: 'footer-language-form' %}
          <div class="disclosure-wrapper language-disclosure">
            <button type="button" class="disclosure-button" aria-expanded="false">
              <span class="selected-value">{{ localization.language.endonym_name }}</span>
              <svg class="disclosure-arrow" width="12" height="8" viewBox="0 0 12 8" fill="none">
                <path d="M1 1L6 6L11 1" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </button>
            <div class="disclosure-content">
              <div class="disclosure-options">
                {% for language in localization.available_languages %}
                  <button type="submit" name="language_code" value="{{ language.iso_code }}" 
                    class="disclosure-option {% if language.iso_code == localization.language.iso_code %}selected{% endif %}">
                    {{ language.endonym_name }}
                  </button>
                {% endfor %}
              </div>
            </div>
          </div>
        {% endform %}
      </localization-form>
    </div>
  </div>
</section>

<!-- Footer Layout - Single Row -->
<div class="footer-bottom-section">
  <div class="footer-single-row">
    <!-- Left: Localization Selectors -->
    <div class="footer-left">
      <div class="footer-localization">
        <!-- Country Selector -->
        <div class="footer__country-selector">
          <localization-form>
            {% form 'localization', id: 'FooterCountryForm2', class: 'footer-country-form' %}
              <div class="disclosure-wrapper country-disclosure">
                <button type="button" class="disclosure-button" aria-expanded="false">
                  <span class="selected-value">{{ localization.country.name }} ({{ localization.country.currency.iso_code }})</span>
                  <svg class="disclosure-arrow" width="12" height="8" viewBox="0 0 12 8" fill="none">
                    <path d="M1 1L6 6L11 1" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </button>
                <div class="disclosure-content">
                  <div class="disclosure-options">
                    {% for country in localization.available_countries %}
                      <button type="submit" name="country_code" value="{{ country.iso_code }}" 
                        class="disclosure-option {% if country.iso_code == localization.country.iso_code %}selected{% endif %}">
                        {{ country.name }} ({{ country.currency.iso_code }})
                      </button>
                    {% endfor %}
                  </div>
                </div>
              </div>
            {% endform %}
          </localization-form>
        </div>
        <!-- Language Selector -->
        <div class="footer__language-selector">
          <localization-form>
            {% form 'localization', id: 'FooterLanguageForm2', class: 'footer-language-form' %}
              <div class="disclosure-wrapper language-disclosure">
                <button type="button" class="disclosure-button" aria-expanded="false">
                  <span class="selected-value">{{ localization.language.endonym_name }}</span>
                  <svg class="disclosure-arrow" width="12" height="8" viewBox="0 0 12 8" fill="none">
                    <path d="M1 1L6 6L11 1" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </button>
                <div class="disclosure-content">
                  <div class="disclosure-options">
                    {% for language in localization.available_languages %}
                      <button type="submit" name="language_code" value="{{ language.iso_code }}" 
                        class="disclosure-option {% if language.iso_code == localization.language.iso_code %}selected{% endif %}">
                        {{ language.endonym_name }}
                      </button>
                    {% endfor %}
                  </div>
                </div>
              </div>
            {% endform %}
          </localization-form>
        </div>
      </div>
    </div>

    <!-- Center: Copyright -->
    <div class="footer-center">
      <div class="footer__copyright caption">
        <small class="copyright__content copyright-line" style="font-size:13px; font-weight:400; color: rgba(var(--color-foreground));">
          <span>&copy;</span>
          <span>{{ 'now' | date: '%Y' }}</span>,
          {{ shop.name | link_to: routes.root_url -}}
          <span class="policies-inline">
            {%- if section.settings.show_policy -%}
              {%- for policy in shop.policies -%}
                {%- if policy != blank -%}
                  <span class="policy-separator"> | </span>
                  <a href="{{ policy.url }}" style="font-size:13px; font-weight:400; color: rgba(var(--color-foreground));">{{ policy.title | escape }}</a>
                {%- endif -%}
              {%- endfor -%}
            {%- endif -%}
          </span>
          <span class="policy-separator"> | </span>{{ powered_by_link }}
        </small>
      </div>
    </div>

    <!-- Right: Payment Icons -->
    <div class="footer-right">
      <div class="payments-icons">
        {% unless shop.enabled_payment_types == empty %}
          <ul class="footer__payment payment-icons">
            {% for type in shop.enabled_payment_types %}
              <li>{{ type | payment_type_svg_tag: class:'payment-icon' }}</li>
            {% endfor %}
          </ul>
        {% endunless %}
      </div>
    </div>
  </div>
</div>

<style>
:root {
  --localization-bg: {% if section.settings.background_color != blank %}{{ section.settings.background_color }}{% else %}rgb(var(--color-background)){% endif %};
  --localization-text: {% if section.settings.text_color != blank %}{{ section.settings.text_color }}{% else %}rgb(var(--color-foreground)){% endif %};
  --localization-border: {% if section.settings.border_color != blank %}{{ section.settings.border_color }}{% else %}rgb(var(--color-border)){% endif %};
  --localization-hover-bg: {% if section.settings.hover_background != blank %}{{ section.settings.hover_background }}{% else %}rgba(var(--color-foreground), 0.05){% endif %};
  --localization-dropdown-bg: {% if section.settings.dropdown_background != blank %}{{ section.settings.dropdown_background }}{% else %}rgb(var(--color-background)){% endif %};
  --localization-dropdown-border: {% if section.settings.dropdown_border != blank %}{{ section.settings.dropdown_border }}{% else %}rgb(var(--color-border)){% endif %};
  --section-height: {% if section.settings.section_height != blank %}{{ section.settings.section_height }}px{% else %}40px{% endif %};
}

/* Section Container */
.localization-section {
  width: 100%;
  font-family: var(--font-body-family);
  display: none;
  margin: 0 !important;
  padding: 0 !important;
  overflow: visible !important;
}

/* Footer Bottom Layout - REDUCED HEIGHT */
.footer-bottom-section {
  width: 100%;
  border-top: 1px solid var(--localization-border);
  margin: 0 !important;
  overflow: visible !important;
  min-height: var(--section-height);
}

.footer-single-row {
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  max-width: 1200px;
  padding: 0.75rem 2rem !important; /* Reduced padding */
  margin: 0 auto !important;
  gap: 0 !important;
  overflow: visible !important;
  min-height: var(--section-height);
  box-sizing: border-box;
}

.footer-left,
.footer-center,
.footer-right {
  overflow: visible !important;
  min-height: 28px; /* Reduced minimum height */
  display: flex;
  align-items: center;
}

.footer-left {
  justify-content: flex-start;
}

.footer-center {
  justify-content: center;
  text-align: center;
  flex-grow: 1;
}

.footer-right {
  justify-content: flex-end;
}

/* Localization Container */
.footer-localization {
  display: flex;
  align-items: center;
  gap: 0.75rem; /* Reduced gap */
  flex-wrap: nowrap;
  overflow: visible !important;
  min-height: 28px; /* Reduced height */
}

/* Selector Containers */
.footer__country-selector,
.footer__language-selector {
  font-family: var(--font-body-family);
  font-weight: var(--font-body-weight);
  position: relative;
  overflow: visible !important;
}

/* Disclosure Wrapper */
.disclosure-wrapper {
  position: relative;
  display: inline-block;
  min-width: 150px; /* Slightly reduced width */
  margin-bottom: 0 !important;
  padding-bottom: 0 !important;
  overflow: visible !important;
}

.disclosure-button {
  all: unset;
  cursor: pointer;
  font-size: 13px;
  color: var(--localization-text);
  font-family: var(--font-body-family);
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  padding: 0.25rem 0; /* Reduced vertical padding */
  min-height: 24px; /* Reduced height */
}

/* Remove hover effect */
.disclosure-button:hover {
  background: none !important;
  border: none !important;
  box-shadow: none !important;
}

/* Keep arrow aligned with text */
.disclosure-arrow {
  margin-left: 0.25rem;
  transition: transform 0.3s ease;
  flex-shrink: 0;
  color: var(--localization-text);
}

/* Selected Value */
.selected-value {
  flex: 1;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.disclosure-button[aria-expanded="true"] .disclosure-arrow {
  transform: rotate(180deg);
}

/* Disclosure Content */
.disclosure-content {
  position: absolute;
  bottom: 100%;
  left: 0;
  right: 0;
  z-index: 1000;
  background-color: var(--localization-dropdown-bg);
  border: 1px solid var(--localization-dropdown-border);
  border-radius: 4px;
  box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.15);
  opacity: 0;
  visibility: hidden;
  transform: translateY(10px);
  transition: all 0.3s ease;
  overflow-y: auto;
  max-height: 200px; /* Reduced max height */
  margin-bottom: 6px; /* Reduced margin */
  min-height: 0;
}

.disclosure-content.open {
  opacity: 1;
  visibility: visible;
  transform: translateY(-6px); /* Reduced transform */
  margin-bottom: 6px;
}

/* Disclosure Options */
.disclosure-options {
  padding: 0.125rem 0; /* Reduced padding */
}

.disclosure-option {
  all: unset;
  display: block;
  width: 100%;
  cursor: pointer;
  font-size: 13px;
  color: var(--localization-text);
  padding: 0.375rem 0.75rem; /* Reduced padding */
  transition: background-color 0.2s ease;
  min-height: 30px; /* Reduced height */
  display: flex;
  align-items: center;
}

.disclosure-option:hover {
  background-color: var(--localization-hover-bg);
}

.disclosure-option.selected {
  background-color: var(--localization-hover-bg);
  font-weight: 500;
}

/* Copyright Section */
.footer__copyright {
  width: 100%;
  max-width: 100%;
  padding: 0.25rem 0; /* Reduced vertical padding */
}

.copyright-line {
  display: inline-block;
  white-space: nowrap;
  line-height: 1.4; /* Reduced line height */
}

.policies-inline {
  display: inline;
}

.policies-inline a {
  color: rgba(var(--color-foreground));
  text-decoration: none;
  font-size: 13px;
  font-weight: 400;
}

.policies-inline a:hover {
  text-decoration: underline;
}

.policy-separator {
  color: rgba(var(--color-foreground));
  margin: 0 0.5rem;
}

/* Payment Icons */
.payments-icons {
  padding: 0.25rem 0; /* Reduced vertical padding */
}

.payments-icons .footer__payment {
  display: flex;
  flex-wrap: wrap;
  gap: 0.375rem; /* Reduced gap */
  align-items: center;
  list-style: none;
  margin: 0;
  padding: 0;
}

.payments-icons .payment-icon {
  height: 20px; /* Reduced icon size */
  width: auto;
}

/* Mobile Responsive */
@media (max-width: 749px) {
  .footer-single-row {
    display: flex;
    flex-direction: column;
    gap: 1.5rem; /* Reduced gap */
    text-align: center;
    overflow: visible !important;
    padding: 1.5rem 1rem !important; /* Reduced mobile padding */
    min-height: calc(var(--section-height) + 20px); /* Reduced additional height */
  }
  
  .footer-left {
    justify-content: center;
    width: 100%;
    order: 2;
    overflow: visible !important;
  }
  
  .footer-center {
    order: 1;
    width: 100%;
  }
  
  .footer-right {
    justify-content: center;
    width: 100%;
    order: 3;
  }
  
  .footer-localization {
    justify-content: center;
    flex-direction: column;
    align-items: center;
    gap: 0.75rem; /* Reduced gap */
    flex-wrap: wrap;
    overflow: visible !important;
  }
  
  .disclosure-wrapper {
    min-width: 180px; /* Slightly reduced */
  }
  
  .disclosure-button {
    font-size: 16px;
    padding: 0.5rem; /* Reduced padding */
    min-height: 36px; /* Reduced touch target */
  }
  
  .copyright-line {
    white-space: normal;
    text-align: center;
    line-height: 1.4;
  }
  
  .disclosure-content {
    max-height: 140px; /* Reduced */
    margin-bottom: 8px;
  }
  
  .disclosure-content.open {
    transform: translateY(-8px);
    margin-bottom: 8px;
  }

  .disclosure-option {
    padding: 0.5rem 0.875rem; /* Reduced mobile padding */
    min-height: 36px; /* Reduced */
  }
}

/* Tablet */
@media (min-width: 750px) and (max-width: 989px) {
  .footer-localization {
    gap: 0.875rem; /* Reduced gap */
    flex-wrap: wrap;
    overflow: visible !important;
  }
  
  .disclosure-wrapper {
    min-width: 130px; /* Reduced width */
  }
  
  .footer-single-row {
    gap: 0.875rem; /* Reduced gap */
    overflow: visible !important;
    padding: 1rem 1.5rem !important; /* Reduced padding */
  }
}

/* Desktop */
@media (min-width: 990px) {
  .footer-localization {
    gap: 1rem; /* Reduced gap */
    overflow: visible !important;
  }
  
  .footer-single-row {
    gap: 1.5rem; /* Reduced gap */
    overflow: visible !important;
  }
}

/* Hide default section if using integrated version */
.localization-section {
  display: none;
}

/* Scrollbar styling for dropdown */
.disclosure-content::-webkit-scrollbar {
  width: 4px;
}

.disclosure-content::-webkit-scrollbar-track {
  background: transparent;
}

.disclosure-content::-webkit-scrollbar-thumb {
  background: var(--localization-border);
  border-radius: 2px;
}

.disclosure-content::-webkit-scrollbar-thumb:hover {
  background: var(--localization-text);
}

/* Ensure body doesn't get extra scroll when dropdown is open */
body {
  overflow-x: hidden;
}

/* Additional fix for any clipping issues */
.footer-bottom-section * {
  box-sizing: border-box;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const disclosureButtons = document.querySelectorAll('.disclosure-button');
  
  disclosureButtons.forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      
      const wrapper = this.closest('.disclosure-wrapper');
      const content = wrapper.querySelector('.disclosure-content');
      const isOpen = this.getAttribute('aria-expanded') === 'true';

      // Close all other dropdowns
      disclosureButtons.forEach(otherButton => {
        if (otherButton !== this) {
          otherButton.setAttribute('aria-expanded', 'false');
          const otherContent = otherButton.closest('.disclosure-wrapper').querySelector('.disclosure-content');
          otherContent.classList.remove('open');
        }
      });

      // Toggle current dropdown
      if (isOpen) {
        this.setAttribute('aria-expanded', 'false');
        content.classList.remove('open');
      } else {
        this.setAttribute('aria-expanded', 'true');
        content.classList.add('open');
      }
    });
  });

  // Close dropdowns when clicking outside
  document.addEventListener('click', function(e) {
    if (!e.target.closest('.disclosure-wrapper')) {
      disclosureButtons.forEach(button => {
        button.setAttribute('aria-expanded', 'false');
        const content = button.closest('.disclosure-wrapper').querySelector('.disclosure-content');
        content.classList.remove('open');
      });
    }
  });

  // Handle option selection
  const disclosureOptions = document.querySelectorAll('.disclosure-option');
  disclosureOptions.forEach(option => {
    option.addEventListener('click', function(e) {
      const wrapper = this.closest('.disclosure-wrapper');
      const button = wrapper.querySelector('.disclosure-button');
      const content = wrapper.querySelector('.disclosure-content');
      
      // Close the dropdown
      button.setAttribute('aria-expanded', 'false');
      content.classList.remove('open');
    });
  });

  // Prevent dropdown content clicks from bubbling
  const disclosureContents = document.querySelectorAll('.disclosure-content');
  disclosureContents.forEach(content => {
    content.addEventListener('click', function(e) {
      e.stopPropagation();
    });
  });
});
</script>
