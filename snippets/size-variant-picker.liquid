{% comment %}
  Unified Variant Picker Snippet
  Handles any non-color variant option (Size, Denomination, Material, Type, etc.)
  Works for both mobile and desktop with responsive styling
  Usage: {% render 'size-variant-picker', product: product, mobile: true/false, show_label: true/false, size_only: true/false %}
{% endcomment %}

{%- liquid
  assign variant_option = null
  assign variant_option_index = null
  assign has_any_variants = false

  for option in product.options_with_values
    assign has_any_variants = true

    if size_only == true
      # For product cards, only show Size variants
      assign option_name_lower = option.name | downcase
      if option_name_lower == 'size' or option_name_lower contains 'size'
        assign variant_option = option
        assign variant_option_index = option.position
        break
      endif
    else
      # For main product page, show any non-color variant
      assign option_name_lower = option.name | downcase
      unless option_name_lower contains 'color' or option_name_lower contains 'colour'
        assign variant_option = option
        assign variant_option_index = option.position
        break
      endunless
    endif
  endfor
-%}

{% if variant_option %}
  {% if mobile %}
    <!-- Mobile Version -->
    <fieldset class="flex justify-between items-center gap-2" style="padding: 10px 0 0 0;" role="group">
      <legend style="font-size: var(--tm-b-4-size); line-height: var(--tm-b-4-line-height);">
        SELECT {{ variant_option.name | upcase }}
      </legend>
      <div class="flex gap-2 flex-wrap" role="radiogroup" aria-labelledby="mobile-size-legend">
        <span id="mobile-size-legend" class="sr-only">{{ variant_option.name }} options</span>
        {% for value in variant_option.values %}
          {% assign variant_available = false %}
          {% assign variant_id = null %}
          {% assign value_normalized = value | strip %}
          {% for variant in product.variants %}
            {% assign option_key = 'option' | append: variant_option_index %}
            {% assign variant_option_value = variant[option_key] | strip %}
            {% if variant_option_value == value_normalized %}
              {% if variant.available %}
                {% assign variant_available = true %}
                {% assign variant_id = variant.id %}
                {% break %}
              {% endif %}
            {% endif %}
          {% endfor %}
          <button
            type="button"
            class="
              size-btn relative px-3 h-10 min-w-[2.5rem] flex items-center justify-center border-transparent rounded border
              focus:outline-none focus:ring-2 focus:ring-blue-500
              {% if forloop.first and variant_available %}bg-black text-white active{% endif %}
              {% unless variant_available %} cursor-not-allowed unavailable-size{% endunless %}
            "
            data-mobile="true"
            data-option-index="{{ variant_option_index }}"
            data-option-key="{{ option_key }}"
            data-value="{{ value | escape }}"
            data-variant-available="{{ variant_available }}"
            data-total-variants="{{ product.variants.size }}"
            role="radio"
            aria-checked="{% if forloop.first and variant_available %}true{% else %}false{% endif %}"
            style="--animation-order: {{ forloop.index0 }};"
            {% if variant_available %}
              data-variant-id="{{ variant_id }}"
              tabindex="{% if forloop.first %}0{% else %}-1{% endif %}"
              {% if forloop.first %}data-default-selected="true"{% endif %}
            {% else %}
              disabled aria-disabled="true"
              tabindex="-1"
            {% endif %}
            aria-label="{{ variant_option.name }} {{ value }}{% unless variant_available %} - Sold out{% endunless %}"
          >
            <span class="label">{{ value }}</span>
            {% unless variant_available %}
              <span class="slash-unavailable" aria-hidden="true"></span>
            {% endunless %}
          </button>
        {% endfor %}
      </div>
    </fieldset>
  {% else %}
    <!-- Desktop Version -->
    <div class="flex justify-between items-center gap-2">
      {% if show_label != false %}
        <span class="uppercase">SELECT {{ variant_option.name | upcase }}</span>
      {% endif %}
      <div class="flex gap-2 flex-wrap">
        {% for value in variant_option.values %}
          {% assign variant_available = false %}
          {% assign variant_id = null %}
          {% assign value_normalized = value | strip %}
          {% for variant in product.variants %}
            {% assign option_key = 'option' | append: variant_option_index %}
            {% assign variant_option_value = variant[option_key] | strip %}
            {% if variant_option_value == value_normalized %}
              {% if variant.available %}
                {% assign variant_available = true %}
                {% assign variant_id = variant.id %}
                {% break %}
              {% endif %}
            {% endif %}
          {% endfor %}
          <button
            type="button"
            class="
              size-btn relative px-3 h-10 min-w-[2.5rem] flex items-center justify-center border-transparent border
              {% if forloop.first and variant_available %}bg-black text-white active{% endif %}
              {% unless variant_available %}cursor-not-allowed unavailable-size{% endunless %}
            "
            data-desktop="true"
            data-option-index="{{ variant_option_index }}"
            data-option-key="{{ option_key }}"
            data-value="{{ value | escape }}"
            data-variant-available="{{ variant_available }}"
            data-total-variants="{{ product.variants.size }}"
            style="--animation-order: {{ forloop.index0 }};"
            {% if variant_available %}
              data-variant-id="{{ variant_id }}"
              {% if forloop.first %}data-default-selected="true"{% endif %}
            {% else %}
              disabled aria-disabled="true"
            {% endif %}
            aria-label="{{ variant_option.name }} {{ value }}{% unless variant_available %} - Sold out{% endunless %}"
          >
            <span class="label">{{ value }}</span>
            {% unless variant_available %}
              <span class="slash-unavailable"></span>
            {% endunless %}
          </button>
        {% endfor %}
      </div>
    </div>
  {% endif %}
{% elsif has_any_variants %}
  <!-- Show SELECT OPTION only when there are variants but no non-color ones -->
  {% if mobile %}
    <div class="flex justify-between items-center gap-2" style="padding: 10px 0;">
      <span style="font-size: var(--tm-b-4-size); line-height: var(--tm-b-4-line-height);"> SELECT OPTION </span>
    </div>
  {% else %}
    <div class="flex justify-between items-center gap-2">
      <span class="uppercase">SELECT OPTION</span>
    </div>
  {% endif %}
{% endif %}

<style>
  .size-btn {
    border-radius: 5px;
    transition: all 0.3s ease;
    background-color: var(--button);
    color: var(--button_label);
    border: 1px solid var(--text);
    height: 40px;
    min-width: 48px;
  }

  .size-btn:not(:disabled):hover,
  .size-btn.bg-black {
    background-color: var(--hovered_button_label);
    color: var(--hovered_button_text_color);
  }

  .size-btn:disabled {
    opacity: 0.8;
    cursor: not-allowed;
    border: 1px solid var(--text);
  }

  .size-btn.unavailable-size {
    opacity: 1;
    visibility: visible;
    position: relative;
    cursor: not-allowed;
    color: var(--text) !important;
    border-color: var(--disabled_text) !important;
    background-color: var(--disabled_text) !important;
    overflow: hidden;
    transform: translateY(0);
  }

  .size-btn.unavailable-size:hover {
    background-color: var(--disabled_text) !important;
    transform: translateY(0);
  }

  .slash-unavailable {
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 1px;
    background-color: var(--text);
    transform: rotate(-42deg) translateY(-50%);
    transform-origin: center;
    pointer-events: none;
    z-index: 10;
    width: 125%;
  }

  .size-btn.unavailable-size:hover .slash-unavailable {
    background-color: var(--text) !important;
    opacity: 1 !important;
    visibility: visible !important;
  }

  /* Animation for size buttons */
  .size-btn.size-animate {
    animation: sizeOptionAppear 0.5s ease forwards;
    animation-delay: calc(0.15s * var(--animation-order));
  }

  @keyframes sizeOptionAppear {
    0% {
      opacity: 0;
      transform: translateY(10px);
      visibility: hidden;
    }
    100% {
      opacity: 1;
      transform: translateY(0);
      visibility: visible;
    }
  }

  /* Animation only applies to product cards, not main product page */
  .new-size-options-wrapper .size-btn {
    opacity: 0;
    visibility: hidden;
    transform: translateY(10px);
  }

  /* Animate in when container is active or on hover */
  .new-size-variants-container.active .size-btn,
  .new-add-to-cart-btn:hover + .new-size-variants-container .size-btn {
    animation: sizeOptionAppear 0.5s ease forwards;
    animation-delay: calc(0.15s * var(--animation-order));
  }

  /* Specific animation delays for better staggered effect */
  .new-size-variants-container.active .size-btn:nth-child(1),
  .new-add-to-cart-btn:hover + .new-size-variants-container .size-btn:nth-child(1) {
    animation-delay: 0s;
  }
  .new-size-variants-container.active .size-btn:nth-child(2),
  .new-add-to-cart-btn:hover + .new-size-variants-container .size-btn:nth-child(2) {
    animation-delay: 0.1s;
  }
  .new-size-variants-container.active .size-btn:nth-child(3),
  .new-add-to-cart-btn:hover + .new-size-variants-container .size-btn:nth-child(3) {
    animation-delay: 0.2s;
  }
  .new-size-variants-container.active .size-btn:nth-child(4),
  .new-add-to-cart-btn:hover + .new-size-variants-container .size-btn:nth-child(4) {
    animation-delay: 0.3s;
  }
  .new-size-variants-container.active .size-btn:nth-child(5),
  .new-add-to-cart-btn:hover + .new-size-variants-container .size-btn:nth-child(5) {
    animation-delay: 0.4s;
  }
</style>
