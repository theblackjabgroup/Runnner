{% comment %}
  Renders a product card

  Accepts:
  - card_product: {Object} Product Liquid object (optional)
  - media_aspect_ratio: {String} Size of the product image card. Values are "square" and "portrait". Default is "square" (optional)
  - image_shape: {String} Image mask to apply to the product image card. Values are "arch", "blob", "chevronleft", "chevronright", "diamond", "parallelogram", and "round". (optional)
  - show_secondary_image: {Boolean} Show the secondary image on hover. Default: false (optional)
  - show_vendor: {Boolean} Show the product vendor. Default: false
  - show_rating: {Boolean} Show the product rating. Default: false
  - extend_height: {Boolean} Card height extends to available container space. Default: true (optional)
  - lazy_load: {Boolean} Image should be lazy loaded. Default: true (optional)
  - skip_styles: {Boolean} Don't include component styles. Useful when rendering multiple product cards in a loop. Default: false (optional)
  - quick_add: {Boolean} Show the quick add button.
  - section_id: {String} The ID of the section that contains this card.
  - horizontal_class: {Boolean} Add a card--horizontal class if set to true. Default: false (optional)
  - horizontal_quick_add: {Boolean} Changes the quick add button styles when set to true. Default: false (optional)
  - placeholder_image: {String} The placeholder image to use when no product exists. Default: 'product-apparel-2' (optional)

  Usage:
  {% render 'card-product', show_vendor: section.settings.show_vendor %}
{% endcomment %}

<style>
  [x-cloak] {
    display: none !important;
  }
</style>

{%- unless skip_styles -%}
  {{ 'component-rating.css' | asset_url | stylesheet_tag }}
  {{ 'component-volume-pricing.css' | asset_url | stylesheet_tag }}

  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'quick-order-list.css' | asset_url | stylesheet_tag }}
  {{ 'quantity-popover.css' | asset_url | stylesheet_tag }}
{%- endunless -%}
{%- if card_product and card_product != empty -%}
  {%- liquid
    assign ratio = 1
    if card_product.featured_media and media_aspect_ratio == 'portrait'
      assign ratio = 0.8
    elsif card_product.featured_media and media_aspect_ratio == 'adapt'
      assign ratio = card_product.featured_media.aspect_ratio
    endif
    if ratio == 0 or ratio == null
      assign ratio = 1
    endif
  -%}
  <div class="card-wrapper product-card-wrapper">
    <div class="group block w-full">
      <div class="relative bg-[#F8F8F8] aspect-[5/6]">
        {%- if card_product.featured_media -%}
          <div class="absolute inset-0 w-full h-full overflow-hidden product-images-slider">
            {% for media in card_product.media %}
              <img
                srcset="
                  {%- if media.width >= 165 -%}{{ media | image_url: width: 165 }} 165w,{%- endif -%}
                  {%- if media.width >= 360 -%}{{ media | image_url: width: 360 }} 360w,{%- endif -%}
                  {%- if media.width >= 533 -%}{{ media | image_url: width: 533 }} 533w,{%- endif -%}
                  {%- if media.width >= 720 -%}{{ media | image_url: width: 720 }} 720w,{%- endif -%}
                  {%- if media.width >= 940 -%}{{ media | image_url: width: 940 }} 940w,{%- endif -%}
                  {%- if media.width >= 1066 -%}{{ media | image_url: width: 1066 }} 1066w,{%- endif -%}
                  {{ media | image_url }} {{ media.width }}w
                "
                class="w-full h-full object-contain p-5 transition-all duration-300 group-hover:scale-[95%] group-hover:-translate-y-10 absolute inset-0 opacity-0"
                loading="lazy"
                width="{{ media.width }}"
                height="{{ media.height }}"
                {% if forloop.first %}
                  style="opacity: 1;"
                {% endif %}
              >
            {% endfor %}

            {% if card_product.media.size > 1 %}
              <button class="slider-arrow prev absolute left-2 top-1/2 -translate-y-1/2 w-8 h-8 bg-white rounded-full shadow-lg opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <path d="M15 18l-6-6 6-6" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
              <button class="slider-arrow next absolute right-2 top-1/2 -translate-y-1/2 w-8 h-8 bg-white rounded-full shadow-lg opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <path d="M9 18l6-6-6-6" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
            {% endif %}
          </div>
        {%- endif -%}

        {% if card_product.available == false %}
          <div class="absolute top-3 right-0 z-10">
            <span class="inline-block px-4 py-1 text-[12px] tracking-wide font-medium bg-zinc-800 text-white">
              SOLD OUT
            </span>
          </div>
        {% else %}
          <div class="absolute inset-x-0 bottom-0 p-4 opacity-0 translate-y-10 transition-all duration-300 group-hover:opacity-100 group-hover:-translate-y-0">
            <div class="bg-white w-[87%] mx-auto text-center product-sizes-container">
              <button
                type="button"
                class="add-to-cart-btn w-full py-4 !text-[1.6rem] shadow-xl rounded-lg font-medium text-black hover:bg-black hover:text-white transition-colors duration-200 uppercase tracking-wider"
              >
                Add To Cart
              </button>

              <div
                class="size-selector bg-white p-2 rounded-lg shadow-xl hidden"
              >
                <div class="text-left mb-2 flex justify-between items-center">
                  <span class="text-[1.4rem] font-medium">SELECT SIZE</span>
                  <button
                    class="close-sizes text-gray-500 hover:text-black"
                  >
                    âœ•
                  </button>
                </div>
                <div class="grid grid-cols-5 gap-1">
                  {% for variant in card_product.variants %}
                    <button
                      class="size-btn py-2 text-[1.4rem] border border-gray-200 hover:border-black hover:bg-black hover:text-white transition-colors duration-200"
                      data-variant-id="{{ variant.id }}"
                    >
                      {{ variant.title }}
                    </button>
                  {% endfor %}
                </div>
              </div>
            </div>
          </div>
        {% endif %}
      </div>

      <div class="mt-3 space-y-1">
        <a href="{{ card_product.url }}" class="block hover:opacity-75 transition-opacity duration-200">
          <h3 class="!text-[1.6rem] uppercase font-medium leading-tight">{{ card_product.title | escape }}</h3>
          <div class="flex gap-2 items-baseline">
            <span class="!text-[1.6rem] uppercase font-medium"> {{ card_product.price | money }} </span>
            {%- if card_product.compare_at_price > card_product.price -%}
              |<span class="!text-[1.6rem] uppercase text-red-600">
                {{- card_product.compare_at_price | money }} FOR MEMBERS</span
              >
            {%- endif -%}
          </div>
        </a>
      </div>
    </div>
  </div>
{%- else -%}
  {%- liquid
    assign ratio = 1
    assign placeholder = true
    if media_aspect_ratio == 'portrait'
      assign ratio = 0.8
    endif
  -%}
  <div class="card-wrapper product-card-wrapper underline-links-hover">
    <div
      class="
        card card--{{ settings.card_style }}
        {% if extend_height %} card--extend-height{% endif %}
        {% if image_shape and image_shape != 'default' %} card--shape{% endif %}
        {% if settings.card_style == 'card' %} color-{{ settings.card_color_scheme }} gradient{% endif %}
      "
      style="--ratio-percent: {{ 1 | divided_by: ratio | times: 100 }}%;"
    >
      <div
        class="card__inner{% if settings.card_style == 'standard' %} color-{{ settings.card_color_scheme }} gradient{% endif %} ratio"
      >
        <div
          class="card__media {% if image_shape and image_shape != 'default' %} shape--{{ image_shape }} color-{{ settings.card_color_scheme }} gradient{% endif %}"
        >
          <div
            class="media media--transparent"
          >
            {%- if placeholder_image -%}
              {{ placeholder_image | placeholder_svg_tag: 'placeholder-svg' }}
            {%- else -%}
              {{ 'product-apparel-2' | placeholder_svg_tag: 'placeholder-svg' }}
            {% endif %}
          </div>
        </div>
      </div>
      <div class="card__content">
        <div class="card__information">
          <h3 class="card__heading card__heading--placeholder{% if settings.card_style == 'standard' %} h5{% endif %}">
            <a role="link" aria-disabled="true" class="full-unstyled-link">
              {{ 'onboarding.product_title' | t }}
            </a>
          </h3>
          <div class="card-information">
            {%- if show_vendor -%}
              <span class="visually-hidden">{{ 'accessibility.vendor' | t }}</span>
              <div class="caption-with-letter-spacing light">{{ 'products.product.vendor' | t }}</div>
            {%- endif -%}
            {% render 'price', placeholder: placeholder, show_compare_at_price: true %}
          </div>
        </div>
      </div>
    </div>
  </div>
{%- endif -%}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const containers = document.querySelectorAll('.product-sizes-container');

    containers.forEach((container) => {
      const addToCartBtn = container.querySelector('.add-to-cart-btn');
      const sizeSelector = container.querySelector('.size-selector');
      const closeBtn = container.querySelector('.close-sizes');
      const sizeBtns = container.querySelectorAll('.size-btn');

      addToCartBtn.addEventListener('click', () => {
        addToCartBtn.style.display = 'none';
        sizeSelector.classList.remove('hidden');
      });

      closeBtn.addEventListener('click', () => {
        sizeSelector.classList.add('hidden');
        addToCartBtn.style.display = 'block';
      });

      container.addEventListener('mouseleave', () => {
        sizeSelector.classList.add('hidden');
        addToCartBtn.style.display = 'block';
      });

      sizeBtns.forEach((btn) => {
        btn.addEventListener('click', () => {
          const variantId = btn.dataset.variantId;
          // Dispatch custom event for add to cart
          container.dispatchEvent(
            new CustomEvent('add-to-cart', {
              detail: { variantId },
              bubbles: true,
            })
          );
          sizeSelector.classList.add('hidden');
          addToCartBtn.style.display = 'block';
        });
      });
    });

    const sliders = document.querySelectorAll('.product-images-slider');

    sliders.forEach((slider) => {
      const images = slider.querySelectorAll('img');
      const prevBtn = slider.querySelector('.prev');
      const nextBtn = slider.querySelector('.next');
      let currentIndex = 0;

      if (!prevBtn || !nextBtn) return;

      function showImage(index) {
        images.forEach((img) => (img.style.opacity = '0'));
        images[index].style.opacity = '1';
      }

      prevBtn.addEventListener('click', (e) => {
        e.preventDefault();
        currentIndex = (currentIndex - 1 + images.length) % images.length;
        showImage(currentIndex);
      });

      nextBtn.addEventListener('click', (e) => {
        e.preventDefault();
        currentIndex = (currentIndex + 1) % images.length;
        showImage(currentIndex);
      });
    });
  });
</script>
