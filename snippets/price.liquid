{% comment %}
  Renders a list of product's price (regular, sale)

  Accepts:
  - product: {Object} Product Liquid object (optional)
  - placeholder: {Boolean} Renders a placeholder price (optional)
  - use_variant: {Boolean} Renders selected or first variant price instead of overall product pricing (optional)
  - show_badges: {Boolean} Renders 'Sale' and 'Sold Out' tags if the product matches the condition (optional)
  - price_class: {String} Adds a price class to the price element (optional)
  - show_compare_at_price: {Boolean} Renders the compare at price if the product matches the condition (optional)
  - font_size_desktop: {String} Desktop font size (optional, default: 15px)
  - font_size_mobile: {String} Mobile font size (optional, default: 14px)
  - font_weight_desktop: {String} Desktop font weight (optional, default: normal)
  - font_weight_mobile: {String} Mobile font weight (optional, default: normal)
  - line_height_desktop: {String} Desktop line height (optional, default: 1.4)
  - line_height_mobile: {String} Mobile line height (optional, default: 1.3)

  Usage:
  {% render 'price', product: product, font_size_desktop: '16px', font_weight_desktop: 'bold' %}
{% endcomment %}
{%- liquid
  if use_variant
    assign target = product.selected_or_first_available_variant
  elsif placeholder
    assign target = null
  else
    assign target = product
  endif

  assign compare_at_price = target.compare_at_price
  assign price = target.price | default: 1999
  assign price_min = product.price_min
  assign price_max = product.price_max
  assign available = target.available | default: false
  assign money_price = price | money
  assign money_price_min = price_min | money
  assign money_price_max = price_max | money
  if settings.currency_code_enabled
    assign money_price = price | money_with_currency
    assign money_price_min = price_min | money_with_currency
    assign money_price_max = price_max | money_with_currency
  endif

  if target == product and product.price_varies
    unless price_class == 'new-product-price'
      assign money_price = 'products.product.price.from_price_html' | t: price: money_price
    endunless
  endif

  # Font customization parameters
  assign desktop_font_size = font_size_desktop | default: '15px'
  assign mobile_font_size = font_size_mobile | default: '14px'
  assign desktop_font_weight = font_weight_desktop | default: 'normal'
  assign mobile_font_weight = font_weight_mobile | default: 'normal'
  assign desktop_line_height = line_height_desktop | default: '1.4'
  assign mobile_line_height = line_height_mobile | default: '1.3'
-%}

{%- unless target == null and placeholder == null -%}
  <div
    class="
      price
      {%- if price_class %} {{ price_class }}{% endif -%}
      {%- if available == false %} price--sold-out{% endif -%}
      {%- if compare_at_price > price and product.quantity_price_breaks_configured? != true %} price--on-sale{% endif -%}
      {%- if compare_at_price > price and product.quantity_price_breaks_configured? %} volume-pricing--sale-badge{% endif -%}
      {%- if product.price_varies == false and product.compare_at_price_varies %} price--no-compare{% endif -%}
      {%- if show_badges %} price--show-badge{% endif -%}
    "
  >
    <div class="price__container">
      {%- comment -%}
        Explanation of description list:
          - div.price__regular: Displayed when there are no variants on sale
          - div.price__sale: Displayed when a variant is a sale
      {%- endcomment -%}
      <div class="price__regular">
        {%- if product.quantity_price_breaks_configured? -%}
          {%- if show_compare_at_price and compare_at_price -%}
            {%- unless product.price_varies == false and product.compare_at_price_varies %}
              <span class="visually-hidden visually-hidden--inline">
                {{- 'products.product.price.regular_price' | t -}}
              </span>
              <span>
                <s class="price-item price-item--regular variant-item__old-price">
                  {% if settings.currency_code_enabled %}
                    {{ compare_at_price | money_with_currency }}
                  {% else %}
                    {{ compare_at_price | money }}
                  {% endif %}
                </s>
              </span>
            {%- endunless -%}
          {%- endif -%}
          <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.regular_price' | t }}</span>
          <span class="price-item price-item--regular">
            {{-
              'products.product.volume_pricing.price_range'
              | t: minimum: money_price_min, maximum: money_price_max
            -}}
          </span>
        {%- else -%}
          <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.regular_price' | t }}</span>
          <span class="price-item price-item--regular">
            {{ money_price }}
          </span>
        {%- endif -%}
      </div>
      <div class="price__sale">
        {%- unless product.price_varies == false and product.compare_at_price_varies %}
          <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.regular_price' | t }}</span>
          <span>
            <s class="price-item price-item--regular">
              {% if settings.currency_code_enabled %}
                {{ compare_at_price | money_with_currency }}
              {% else %}
                {{ compare_at_price | money }}
              {% endif %}
            </s>
          </span>
        {%- endunless -%}
        <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.sale_price' | t }}</span>
        <span class="price-item price-item--sale price-item--last">
          {{ money_price }}
        </span>
      </div>
      <small class="unit-price caption{% if product.selected_or_first_available_variant.unit_price_measurement == nil %} hidden{% endif %}">
        <span class="visually-hidden">{{ 'products.product.price.unit_price' | t }}</span>
        <span class="price-item price-item--last">
          <span>{{- product.selected_or_first_available_variant.unit_price | money -}}</span>
          <span aria-hidden="true">/</span>
          <span class="visually-hidden">&nbsp;{{ 'accessibility.unit_price_separator' | t }}&nbsp;</span>
          <span>
            {%- if product.selected_or_first_available_variant.unit_price_measurement.reference_value != 1 -%}
              {{- product.selected_or_first_available_variant.unit_price_measurement.reference_value -}}
            {%- endif -%}
            {{ product.selected_or_first_available_variant.unit_price_measurement.reference_unit }}
          </span>
        </span>
      </small>
    </div>
    {%- if show_badges -%}
      <span class="badge price__badge-sale color-{{ settings.sale_badge_color_scheme }}">
        {{ 'products.product.on_sale' | t }}
      </span>

      <span class="badge price__badge-sold-out color-{{ settings.sold_out_badge_color_scheme }}">
        {{ 'products.product.sold_out' | t }}
      </span>
    {%- endif -%}
  </div>
{% endunless %}

<style>
  /* New Product Card Price Styles */
  .new-product-price {
    color: var(--text);
    padding-top: 5px;
    font-size: {{ desktop_font_size }};
    font-weight: {{ desktop_font_weight }};
    line-height: {{ desktop_line_height }};
  }

  .new-product-price .price__container {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .new-product-price .price__regular,
  .new-product-price .price__sale {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .new-product-price .price-item {
    font-size: {{ desktop_font_size }};
    font-weight: {{ desktop_font_weight }};
    line-height: {{ desktop_line_height }};
    color: var(--text);
  }

  .new-product-price .price-item--regular {
    color: var(--text);
  }

  /* Sale price styling - strikethrough for compare-at-price */
  .new-product-price .price__sale .price-item--regular {
    text-decoration: line-through;
    color: var(--disabled_text);
  }

  /* Hide regular price section when on sale */
  .new-product-price.price--on-sale .price__regular {
    display: none !important;
  }

  /* Show sale price section when on sale */
  .new-product-price.price--on-sale .price__sale {
    display: flex !important;
  }

  /* Hide sale price section when not on sale */
  .new-product-price:not(.price--on-sale) .price__sale {
    display: none !important;
  }

  /* Show regular price section when not on sale */
  .new-product-price:not(.price--on-sale) .price__regular {
    display: flex !important;
  }

  .new-product-price .visually-hidden {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    margin: -1px !important;
    overflow: hidden !important;
    clip: rect(0, 0, 0, 0) !important;
    white-space: nowrap !important;
    border: 0 !important;
  }

  .new-product-price .unit-price {
    display: none;
  }

  .new-product-price .badge {
    display: none;
  }

  /* Mobile Responsive Styles */
  @media screen and (max-width: 749px) {
    .new-product-price {
      font-size: {{ mobile_font_size }};
      font-weight: {{ mobile_font_weight }};
      line-height: {{ mobile_line_height }};
    }

    .new-product-price .price-item {
      font-size: {{ mobile_font_size }};
      font-weight: {{ mobile_font_weight }};
      line-height: {{ mobile_line_height }};
    }
  }

  /* General Price Styles (for non-new-product-price classes) */
  .price:not(.new-product-price) {
    font-size: {{ desktop_font_size }};
    font-weight: {{ desktop_font_weight }};
    line-height: {{ desktop_line_height }};
  }

  .price:not(.new-product-price) .price-item {
    font-size: {{ desktop_font_size }};
    font-weight: {{ desktop_font_weight }};
    line-height: {{ desktop_line_height }};
  }

  @media screen and (max-width: 749px) {
    .price:not(.new-product-price) {
      font-size: {{ mobile_font_size }};
      font-weight: {{ mobile_font_weight }};
      line-height: {{ mobile_line_height }};
    }

    .price:not(.new-product-price) .price-item {
      font-size: {{ mobile_font_size }};
      font-weight: {{ mobile_font_weight }};
      line-height: {{ mobile_line_height }};
    }
  }
</style>
