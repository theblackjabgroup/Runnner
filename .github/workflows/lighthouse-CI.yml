name: Shopify Lighthouse CI

on: [push]

jobs:
  lhci:
    name: Lighthouse CI with Slack
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run Shopify Lighthouse CI
        id: lhci
        continue-on-error: true
        uses: shopify/lighthouse-ci-action@v1
        with:
          access_token:  ${{ secrets.APIKEY }}
          store: "delhi-dev-themetest.myshopify.com"
          lhci_min_score_accessibility: 1.0
          lhci_min_score_performance: 0.9
          password: "thoolt"

      - name: Analyze LHCI Output
        if: always()
        run: |
          set -o pipefail

          # Parse failure types
          grep "âœ˜" lhci_output.txt > failed_assertions.txt || echo "No assertion failures" > failed_assertions.txt
          grep -qi "maximum number of 100 development themes" lhci_output.txt && echo "FAILURE_TYPE=theme_limit" >> $GITHUB_ENV || true
          grep -q "âœ˜" failed_assertions.txt && echo "FAILURE_TYPE=assertion" >> $GITHUB_ENV || echo "FAILURE_TYPE=infra" >> $GITHUB_ENV

          # âœ… Extract report links correctly
          grep 'Open the report at' lhci_output.txt | sed 's/^.*\(https:\/\/.*\.report\.html\).*$/\1/' > report_urls.txt || echo "No report links found" > report_urls.txt


      - name: Notify Slack
        if: failure() || env.FAILURE_TYPE == 'theme_limit' || env.FAILURE_TYPE == 'assertion'
        run: |
          ACTOR=${{ github.actor }}
          BRANCH=${{ github.ref_name }}
          COMMIT=${{ github.sha }}
          TYPE=${{ env.FAILURE_TYPE }}
          REPO_URL="https://github.com/${{ github.repository }}"
          COMMIT_URL="${REPO_URL}/commit/${COMMIT}"

          MSG="*ðŸš¨ Shopify Lighthouse CI failed!*\n"
          MSG+="*Triggered by:* \`@${ACTOR}\`\n"
          MSG+="*Branch:* \`${BRANCH}\`\n"
          MSG+="*Commit:* <${COMMIT_URL}|${COMMIT}>\n"
          MSG+="*Workflow:* \`${{ github.workflow }}\`\n\n"

          if [ "$TYPE" = "theme_limit" ]; then
            MSG+="*Reason:* ðŸ”º Shopify theme limit (100) reached.\n"
          elif [ "$TYPE" = "assertion" ]; then
            MSG+="*Failing Constraints:*\n$(cat failed_assertions.txt)\n\n"
          else
            MSG+="*Reason:* CI failed before assertions â€” infra/config issue likely.\n"
          fi

          MSG+="*Report Links:*\n$(cat report_urls.txt)"

          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"${MSG//\"/\\\"}\"}" \
            ${{ secrets.SLACK_WEBHOOK_URL }}
